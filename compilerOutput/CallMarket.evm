    /* "contracts/queue/CallMarket.sol":1612:17162  contract CallMarket {... */
  mstore(0x40, 0x80)
    /* "contracts/queue/CallMarket.sol":2078:2101  new LinkedListMapping() */
  mload(0x40)
  tag_1
  swap1
  tag_2
  jump	// in
tag_1:
  mload(0x40)
  dup1
  swap2
  sub
  swap1
  0x00
  create
  dup1
  iszero
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_3
  jumpi
    /* "--CODEGEN--":45:61   */
  returndatasize
    /* "--CODEGEN--":42:43   */
  0x00
    /* "--CODEGEN--":39:40   */
  dup1
    /* "--CODEGEN--":24:62   */
  returndatacopy
    /* "--CODEGEN--":77:93   */
  returndatasize
    /* "--CODEGEN--":74:75   */
  0x00
    /* "--CODEGEN--":67:94   */
  revert
    /* "--CODEGEN--":5:7   */
tag_3:
    /* "contracts/queue/CallMarket.sol":2078:2101  new LinkedListMapping() */
  pop
    /* "contracts/queue/CallMarket.sol":2037:2101  LinkedListMapping public priorityQueue = new LinkedListMapping() */
  0x00
  dup1
  0x0100
  exp
  dup2
  sload
  dup2
  0xffffffffffffffffffffffffffffffffffffffff
  mul
  not
  and
  swap1
  dup4
  0xffffffffffffffffffffffffffffffffffffffff
  and
  mul
  or
  swap1
  sstore
  pop
    /* "contracts/queue/CallMarket.sol":2221:2225  this */
  address
    /* "contracts/queue/CallMarket.sol":2161:2228  address payable public callmarket = address(uint160(address(this))) */
  0x01
  exp(0x0100, 0x00)
  dup2
  sload
  dup2
  0xffffffffffffffffffffffffffffffffffffffff
  mul
  not
  and
  swap1
  dup4
  0xffffffffffffffffffffffffffffffffffffffff
  and
  mul
  or
  swap1
  sstore
  pop
    /* "contracts/queue/CallMarket.sol":1612:17162  contract CallMarket {... */
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_4
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_4:
    /* "contracts/queue/CallMarket.sol":1612:17162  contract CallMarket {... */
  pop
  jump(tag_5)
tag_2:
  dataSize(sub_1)
  dup1
  dataOffset(sub_1)
  dup4
  codecopy
  add
  swap1
  jump	// out
tag_5:
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "contracts/queue/CallMarket.sol":1612:17162  contract CallMarket {... */
      mstore(0x40, 0x80)
      jumpi(tag_1, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x9621dc16
      gt
      tag_24
      jumpi
      dup1
      0xc511ed5e
      gt
      tag_25
      jumpi
      dup1
      0xc511ed5e
      eq
      tag_18
      jumpi
      dup1
      0xc9ed9d87
      eq
      tag_19
      jumpi
      dup1
      0xd8270dce
      eq
      tag_20
      jumpi
      dup1
      0xf5465992
      eq
      tag_21
      jumpi
      dup1
      0xfa43d13d
      eq
      tag_22
      jumpi
      dup1
      0xfe417fa5
      eq
      tag_23
      jumpi
      jump(tag_1)
    tag_25:
      dup1
      0x9621dc16
      eq
      tag_13
      jumpi
      dup1
      0x98ea5fca
      eq
      tag_14
      jumpi
      dup1
      0xa96ca508
      eq
      tag_15
      jumpi
      dup1
      0xb821da1b
      eq
      tag_16
      jumpi
      dup1
      0xc1b617ca
      eq
      tag_17
      jumpi
      jump(tag_1)
    tag_24:
      dup1
      0x49407a44
      gt
      tag_26
      jumpi
      dup1
      0x49407a44
      eq
      tag_7
      jumpi
      dup1
      0x5f8909bd
      eq
      tag_8
      jumpi
      dup1
      0x67f7e81a
      eq
      tag_9
      jumpi
      dup1
      0x69abe5ac
      eq
      tag_10
      jumpi
      dup1
      0x7288a28a
      eq
      tag_11
      jumpi
      dup1
      0x7ee68546
      eq
      tag_12
      jumpi
      jump(tag_1)
    tag_26:
      dup1
      0x0770ed76
      eq
      tag_2
      jumpi
      dup1
      0x0854a4ea
      eq
      tag_3
      jumpi
      dup1
      0x338b5dea
      eq
      tag_4
      jumpi
      dup1
      0x3606f5b9
      eq
      tag_5
      jumpi
      dup1
      0x45d53788
      eq
      tag_6
      jumpi
    tag_1:
      0x00
      dup1
      revert
        /* "contracts/queue/CallMarket.sol":2037:2101  LinkedListMapping public priorityQueue = new LinkedListMapping() */
    tag_2:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_27
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_27:
        /* "contracts/queue/CallMarket.sol":2037:2101  LinkedListMapping public priorityQueue = new LinkedListMapping() */
      pop
      tag_28
      tag_29
      jump	// in
    tag_28:
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5627:5665  address[] public unavailableTokenArray */
    tag_3:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_30
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_30:
        /* "contracts/queue/CallMarket.sol":5627:5665  address[] public unavailableTokenArray */
      pop
      tag_31
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_32
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_32:
        /* "contracts/queue/CallMarket.sol":5627:5665  address[] public unavailableTokenArray */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_33
      jump	// in
    tag_31:
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":6533:6793  function depositToken(address token, uint256 numofTokens)... */
    tag_4:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_34
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_34:
        /* "contracts/queue/CallMarket.sol":6533:6793  function depositToken(address token, uint256 numofTokens)... */
      pop
      tag_35
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_36
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_36:
        /* "contracts/queue/CallMarket.sol":6533:6793  function depositToken(address token, uint256 numofTokens)... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_37
      jump	// in
    tag_35:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":7215:7477  function openMarket() external returns (bool) {... */
    tag_5:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_38
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_38:
        /* "contracts/queue/CallMarket.sol":7215:7477  function openMarket() external returns (bool) {... */
      pop
      tag_39
      tag_40
      jump	// in
    tag_39:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5354:5378  uint256 public numOrders */
    tag_6:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_41
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_41:
        /* "contracts/queue/CallMarket.sol":5354:5378  uint256 public numOrders */
      pop
      tag_42
      tag_43
      jump	// in
    tag_42:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":16460:16884  function claimEther(uint256 numofEthers) external returns (bool) {... */
    tag_7:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_44
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_44:
        /* "contracts/queue/CallMarket.sol":16460:16884  function claimEther(uint256 numofEthers) external returns (bool) {... */
      pop
      tag_45
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_46
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_46:
        /* "contracts/queue/CallMarket.sol":16460:16884  function claimEther(uint256 numofEthers) external returns (bool) {... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_47
      jump	// in
    tag_45:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5320:5348  uint256 public biddingPeriod */
    tag_8:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_48
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_48:
        /* "contracts/queue/CallMarket.sol":5320:5348  uint256 public biddingPeriod */
      pop
      tag_49
      tag_50
      jump	// in
    tag_49:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":2161:2228  address payable public callmarket = address(uint160(address(this))) */
    tag_9:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_51
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_51:
        /* "contracts/queue/CallMarket.sol":2161:2228  address payable public callmarket = address(uint160(address(this))) */
      pop
      tag_52
      tag_53
      jump	// in
    tag_52:
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5419:5448  uint256 public sellistCounter */
    tag_10:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_54
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_54:
        /* "contracts/queue/CallMarket.sol":5419:5448  uint256 public sellistCounter */
      pop
      tag_55
      tag_56
      jump	// in
    tag_55:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":9518:10330  function submitAsk(uint256 price, uint256 volume)... */
    tag_11:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_57
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_57:
        /* "contracts/queue/CallMarket.sol":9518:10330  function submitAsk(uint256 price, uint256 volume)... */
      pop
      tag_58
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_59
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_59:
        /* "contracts/queue/CallMarket.sol":9518:10330  function submitAsk(uint256 price, uint256 volume)... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_60
      jump	// in
    tag_58:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":12691:15644  function matchOrders()... */
    tag_12:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_61
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_61:
        /* "contracts/queue/CallMarket.sol":12691:15644  function matchOrders()... */
      pop
      tag_62
      tag_63
      jump	// in
    tag_62:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5672:5724  mapping(address => uint256) public totalEtherBalance */
    tag_13:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_64
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_64:
        /* "contracts/queue/CallMarket.sol":5672:5724  mapping(address => uint256) public totalEtherBalance */
      pop
      tag_65
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_66
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_66:
        /* "contracts/queue/CallMarket.sol":5672:5724  mapping(address => uint256) public totalEtherBalance */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_67
      jump	// in
    tag_65:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":6944:7081  function depositEther() external payable returns (bool) {... */
    tag_14:
      tag_68
      tag_69
      jump	// in
    tag_68:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5384:5413  uint256 public buylistCounter */
    tag_15:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_70
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_70:
        /* "contracts/queue/CallMarket.sol":5384:5413  uint256 public buylistCounter */
      pop
      tag_71
      tag_72
      jump	// in
    tag_71:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":8086:8915  function submitBid(uint256 price, uint256 volume)... */
    tag_16:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_73
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_73:
        /* "contracts/queue/CallMarket.sol":8086:8915  function submitBid(uint256 price, uint256 volume)... */
      pop
      tag_74
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_75
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_75:
        /* "contracts/queue/CallMarket.sol":8086:8915  function submitBid(uint256 price, uint256 volume)... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_76
      jump	// in
    tag_74:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5730:5788  mapping(address => uint256) public unavailableEtherBalance */
    tag_17:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_77
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_77:
        /* "contracts/queue/CallMarket.sol":5730:5788  mapping(address => uint256) public unavailableEtherBalance */
      pop
      tag_78
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_79
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_79:
        /* "contracts/queue/CallMarket.sol":5730:5788  mapping(address => uint256) public unavailableEtherBalance */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_80
      jump	// in
    tag_78:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":10465:10571  function closeMarket() external returns (bool) {... */
    tag_18:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_81
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_81:
        /* "contracts/queue/CallMarket.sol":10465:10571  function closeMarket() external returns (bool) {... */
      pop
      tag_82
      tag_83
      jump	// in
    tag_82:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5794:5832  address[] public unavailableEtherArray */
    tag_19:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_84
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_84:
        /* "contracts/queue/CallMarket.sol":5794:5832  address[] public unavailableEtherArray */
      pop
      tag_85
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_86
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_86:
        /* "contracts/queue/CallMarket.sol":5794:5832  address[] public unavailableEtherArray */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_87
      jump	// in
    tag_85:
      mload(0x40)
      dup1
      dup3
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5287:5314  uint256 public creationTime */
    tag_20:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_88
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_88:
        /* "contracts/queue/CallMarket.sol":5287:5314  uint256 public creationTime */
      pop
      tag_89
      tag_90
      jump	// in
    tag_89:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5505:5557  mapping(address => uint256) public totalTokenBalance */
    tag_21:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_91
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_91:
        /* "contracts/queue/CallMarket.sol":5505:5557  mapping(address => uint256) public totalTokenBalance */
      pop
      tag_92
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_93
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_93:
        /* "contracts/queue/CallMarket.sol":5505:5557  mapping(address => uint256) public totalTokenBalance */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_94
      jump	// in
    tag_92:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":5563:5621  mapping(address => uint256) public unavailableTokenBalance */
    tag_22:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_95
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_95:
        /* "contracts/queue/CallMarket.sol":5563:5621  mapping(address => uint256) public unavailableTokenBalance */
      pop
      tag_96
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_97
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_97:
        /* "contracts/queue/CallMarket.sol":5563:5621  mapping(address => uint256) public unavailableTokenBalance */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_98
      jump	// in
    tag_96:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":15816:16291  function claimTokens(address token, uint256 numofTokens)... */
    tag_23:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_99
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_99:
        /* "contracts/queue/CallMarket.sol":15816:16291  function claimTokens(address token, uint256 numofTokens)... */
      pop
      tag_100
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x40
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_101
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_101:
        /* "contracts/queue/CallMarket.sol":15816:16291  function claimTokens(address token, uint256 numofTokens)... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_102
      jump	// in
    tag_100:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/CallMarket.sol":2037:2101  LinkedListMapping public priorityQueue = new LinkedListMapping() */
    tag_29:
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":5627:5665  address[] public unavailableTokenArray */
    tag_33:
      0x0a
      dup2
      dup2
      sload
      dup2
      lt
      tag_103
      jumpi
      invalid
    tag_103:
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      0x00
      swap2
      pop
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":6533:6793  function depositToken(address token, uint256 numofTokens)... */
    tag_37:
        /* "contracts/queue/CallMarket.sol":6625:6629  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":6678:6689  numofTokens */
      dup2
        /* "contracts/queue/CallMarket.sol":6645:6662  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":6645:6674  totalTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":6663:6673  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":6645:6674  totalTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":6645:6689  totalTokenBalance[msg.sender] += numofTokens */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":6706:6711  token */
      dup3
        /* "contracts/queue/CallMarket.sol":6699:6725  IERC20(token).transferFrom */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x23b872dd
        /* "contracts/queue/CallMarket.sol":6726:6736  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":6746:6750  this */
      address
        /* "contracts/queue/CallMarket.sol":6753:6764  numofTokens */
      dup6
        /* "contracts/queue/CallMarket.sol":6699:6765  IERC20(token).transferFrom(msg.sender, address(this), numofTokens) */
      mload(0x40)
      dup5
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      dup1
      dup5
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap4
      pop
      pop
      pop
      pop
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_106
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_106:
        /* "contracts/queue/CallMarket.sol":6699:6765  IERC20(token).transferFrom(msg.sender, address(this), numofTokens) */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_107
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_107:
        /* "contracts/queue/CallMarket.sol":6699:6765  IERC20(token).transferFrom(msg.sender, address(this), numofTokens) */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_108
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_108:
        /* "contracts/queue/CallMarket.sol":6699:6765  IERC20(token).transferFrom(msg.sender, address(this), numofTokens) */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":6782:6786  true */
      0x01
        /* "contracts/queue/CallMarket.sol":6775:6786  return true */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":6533:6793  function depositToken(address token, uint256 numofTokens)... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":7215:7477  function openMarket() external returns (bool) {... */
    tag_40:
        /* "contracts/queue/CallMarket.sol":7255:7259  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":7286:7301  block.timestamp */
      timestamp
        /* "contracts/queue/CallMarket.sol":7271:7283  creationTime */
      0x02
        /* "contracts/queue/CallMarket.sol":7271:7301  creationTime = block.timestamp */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7327:7337  10 minutes */
      0x0258
        /* "contracts/queue/CallMarket.sol":7311:7324  biddingPeriod */
      0x03
        /* "contracts/queue/CallMarket.sol":7311:7337  biddingPeriod = 10 minutes */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7355:7366  States.Open */
      0x00
        /* "contracts/queue/CallMarket.sol":7347:7352  state */
      0x01
      0x14
        /* "contracts/queue/CallMarket.sol":7347:7366  state = States.Open */
      0x0100
      exp
      dup2
      sload
      dup2
      0xff
      mul
      not
      and
      swap1
      dup4
      0x02
      dup2
      gt
      iszero
      tag_110
      jumpi
      invalid
    tag_110:
      mul
      or
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7388:7389  0 */
      0x00
        /* "contracts/queue/CallMarket.sol":7376:7385  numOrders */
      0x04
        /* "contracts/queue/CallMarket.sol":7376:7389  numOrders = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7416:7419  100 */
      0x64
        /* "contracts/queue/CallMarket.sol":7399:7413  sellistCounter */
      0x06
        /* "contracts/queue/CallMarket.sol":7399:7419  sellistCounter = 100 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7446:7449  999 */
      0x03e7
        /* "contracts/queue/CallMarket.sol":7429:7443  buylistCounter */
      0x05
        /* "contracts/queue/CallMarket.sol":7429:7449  buylistCounter = 999 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7466:7470  true */
      0x01
        /* "contracts/queue/CallMarket.sol":7459:7470  return true */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":7215:7477  function openMarket() external returns (bool) {... */
      swap1
      jump	// out
        /* "contracts/queue/CallMarket.sol":5354:5378  uint256 public numOrders */
    tag_43:
      sload(0x04)
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":16460:16884  function claimEther(uint256 numofEthers) external returns (bool) {... */
    tag_47:
        /* "contracts/queue/CallMarket.sol":16519:16523  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":16645:16656  numofEthers */
      dup2
        /* "contracts/queue/CallMarket.sol":16605:16628  unavailableEtherBalance */
      0x0c
        /* "contracts/queue/CallMarket.sol":16605:16640  unavailableEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":16629:16639  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":16605:16640  unavailableEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":16557:16574  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":16557:16586  totalEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":16575:16585  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":16557:16586  totalEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":16557:16640  totalEtherBalance[msg.sender] -... */
      sub
        /* "contracts/queue/CallMarket.sol":16556:16656  (totalEtherBalance[msg.sender] -... */
      lt
      iszero
        /* "contracts/queue/CallMarket.sol":16535:16699  require(... */
      tag_112
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x11
      dup2
      mstore
      0x20
      add
      dup1
      0x4e6f7420656e6f75676820457468657273000000000000000000000000000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_112:
        /* "contracts/queue/CallMarket.sol":16709:16734  uint256 EthersToBeClaimed */
      0x00
        /* "contracts/queue/CallMarket.sol":16737:16748  numofEthers */
      dup3
        /* "contracts/queue/CallMarket.sol":16709:16748  uint256 EthersToBeClaimed = numofEthers */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":16791:16808  EthersToBeClaimed */
      dup1
        /* "contracts/queue/CallMarket.sol":16758:16775  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":16758:16787  totalEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":16776:16786  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":16758:16787  totalEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":16758:16808  totalEtherBalance[msg.sender] -= EthersToBeClaimed */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":16818:16828  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":16818:16837  msg.sender.transfer */
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":16818:16856  msg.sender.transfer(EthersToBeClaimed) */
      0x08fc
        /* "contracts/queue/CallMarket.sol":16838:16855  EthersToBeClaimed */
      dup3
        /* "contracts/queue/CallMarket.sol":16818:16856  msg.sender.transfer(EthersToBeClaimed) */
      swap1
      dup2
      iszero
      mul
      swap1
      mload(0x40)
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup6
      dup9
      dup9
      call
      swap4
      pop
      pop
      pop
      pop
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_113
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_113:
        /* "contracts/queue/CallMarket.sol":16818:16856  msg.sender.transfer(EthersToBeClaimed) */
      pop
        /* "contracts/queue/CallMarket.sol":16873:16877  true */
      0x01
        /* "contracts/queue/CallMarket.sol":16866:16877  return true */
      swap2
      pop
      pop
        /* "contracts/queue/CallMarket.sol":16460:16884  function claimEther(uint256 numofEthers) external returns (bool) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":5320:5348  uint256 public biddingPeriod */
    tag_50:
      sload(0x03)
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":2161:2228  address payable public callmarket = address(uint160(address(this))) */
    tag_53:
      0x01
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":5419:5448  uint256 public sellistCounter */
    tag_56:
      sload(0x06)
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":9518:10330  function submitAsk(uint256 price, uint256 volume)... */
    tag_60:
        /* "contracts/queue/CallMarket.sol":9638:9642  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":9608:9619  States.Open */
      dup1
        /* "contracts/queue/CallMarket.sol":6218:6225  state_1 */
      dup1
        /* "contracts/queue/CallMarket.sol":6209:6225  state == state_1 */
      0x02
      dup2
      gt
      iszero
      tag_115
      jumpi
      invalid
    tag_115:
        /* "contracts/queue/CallMarket.sol":6209:6214  state */
      0x01
      0x14
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xff
      and
        /* "contracts/queue/CallMarket.sol":6209:6225  state == state_1 */
      0x02
      dup2
      gt
      iszero
      tag_116
      jumpi
      invalid
    tag_116:
      eq
        /* "contracts/queue/CallMarket.sol":6201:6226  require(state == state_1) */
      tag_117
      jumpi
      0x00
      dup1
      revert
    tag_117:
        /* "contracts/queue/CallMarket.sol":9768:9774  volume */
      dup3
        /* "contracts/queue/CallMarket.sol":9728:9751  unavailableTokenBalance */
      0x09
        /* "contracts/queue/CallMarket.sol":9728:9763  unavailableTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":9752:9762  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":9728:9763  unavailableTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":9680:9697  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":9680:9709  totalTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":9698:9708  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":9680:9709  totalTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":9680:9763  totalTokenBalance[msg.sender] -... */
      sub
        /* "contracts/queue/CallMarket.sol":9679:9774  (totalTokenBalance[msg.sender] -... */
      lt
      iszero
        /* "contracts/queue/CallMarket.sol":9658:9828  require(... */
      tag_119
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x1c
      dup2
      mstore
      0x20
      add
      dup1
      0x546f6b656e2062616c616e6365206973206e6f7420656e6f7567682100000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_119:
        /* "contracts/queue/CallMarket.sol":9838:9861  uint256 _finalpriceUint */
      0x00
        /* "contracts/queue/CallMarket.sol":9871:9902  string memory _finalpriceString */
      0x60
        /* "contracts/queue/CallMarket.sol":9932:10018  contcat(... */
      tag_120
        /* "contracts/queue/CallMarket.sol":9953:9969  uintTostr(price) */
      tag_121
        /* "contracts/queue/CallMarket.sol":9963:9968  price */
      dup8
        /* "contracts/queue/CallMarket.sol":9953:9962  uintTostr */
      tag_122
        /* "contracts/queue/CallMarket.sol":9953:9969  uintTostr(price) */
      jump	// in
    tag_121:
        /* "contracts/queue/CallMarket.sol":9983:10008  uintTostr(sellistCounter) */
      tag_123
        /* "contracts/queue/CallMarket.sol":9993:10007  sellistCounter */
      sload(0x06)
        /* "contracts/queue/CallMarket.sol":9983:9992  uintTostr */
      tag_122
        /* "contracts/queue/CallMarket.sol":9983:10008  uintTostr(sellistCounter) */
      jump	// in
    tag_123:
        /* "contracts/queue/CallMarket.sol":9932:9939  contcat */
      tag_124
        /* "contracts/queue/CallMarket.sol":9932:10018  contcat(... */
      jump	// in
    tag_120:
        /* "contracts/queue/CallMarket.sol":9912:10018  _finalpriceString = contcat(... */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":10046:10074  strTouint(_finalpriceString) */
      tag_125
        /* "contracts/queue/CallMarket.sol":10056:10073  _finalpriceString */
      dup2
        /* "contracts/queue/CallMarket.sol":10046:10055  strTouint */
      tag_126
        /* "contracts/queue/CallMarket.sol":10046:10074  strTouint(_finalpriceString) */
      jump	// in
    tag_125:
        /* "contracts/queue/CallMarket.sol":10028:10074  _finalpriceUint = strTouint(_finalpriceString) */
      swap2
      pop
        /* "contracts/queue/CallMarket.sol":10085:10094  numOrders */
      0x04
      0x00
        /* "contracts/queue/CallMarket.sol":10085:10096  numOrders++ */
      dup2
      sload
      dup1
      swap3
      swap2
      swap1
      0x01
      add
      swap2
      swap1
      pop
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":10106:10120  sellistCounter */
      0x06
      0x00
        /* "contracts/queue/CallMarket.sol":10106:10122  sellistCounter++ */
      dup2
      sload
      dup1
      swap3
      swap2
      swap1
      0x01
      add
      swap2
      swap1
      pop
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":10171:10177  volume */
      dup5
        /* "contracts/queue/CallMarket.sol":10132:10155  unavailableTokenBalance */
      0x09
        /* "contracts/queue/CallMarket.sol":10132:10167  unavailableTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":10156:10166  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":10132:10167  unavailableTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":10132:10177  unavailableTokenBalance[msg.sender] += volume */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":10187:10208  unavailableTokenArray */
      0x0a
        /* "contracts/queue/CallMarket.sol":10214:10224  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":10187:10225  unavailableTokenArray.push(msg.sender) */
      swap1
      dup1
        /* "--CODEGEN--":39:40   */
      0x01
        /* "--CODEGEN--":33:36   */
      dup2
        /* "--CODEGEN--":27:37   */
      sload
        /* "--CODEGEN--":23:41   */
      add
        /* "--CODEGEN--":57:67   */
      dup1
        /* "--CODEGEN--":52:55   */
      dup3
        /* "--CODEGEN--":45:68   */
      sstore
        /* "--CODEGEN--":79:89   */
      dup1
        /* "--CODEGEN--":72:89   */
      swap2
      pop
        /* "--CODEGEN--":0:93   */
      pop
        /* "contracts/queue/CallMarket.sol":10187:10225  unavailableTokenArray.push(msg.sender) */
      swap1
      0x01
      dup3
      sub
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      0x00
      swap1
      swap2
      swap3
      swap1
      swap2
      swap1
      swap2
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
      pop
        /* "contracts/queue/CallMarket.sol":10235:10248  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":10235:10258  priorityQueue.insertAsk */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xa78b7907
        /* "contracts/queue/CallMarket.sol":10259:10269  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":10271:10276  price */
      dup9
        /* "contracts/queue/CallMarket.sol":10278:10284  volume */
      dup9
        /* "contracts/queue/CallMarket.sol":10286:10301  _finalpriceUint */
      dup7
        /* "contracts/queue/CallMarket.sol":10235:10302  priorityQueue.insertAsk(msg.sender, price, volume, _finalpriceUint) */
      mload(0x40)
      dup6
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      dup1
      dup6
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap5
      pop
      pop
      pop
      pop
      pop
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_128
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_128:
        /* "contracts/queue/CallMarket.sol":10235:10302  priorityQueue.insertAsk(msg.sender, price, volume, _finalpriceUint) */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_129
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_129:
        /* "contracts/queue/CallMarket.sol":10235:10302  priorityQueue.insertAsk(msg.sender, price, volume, _finalpriceUint) */
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":10319:10323  true */
      0x01
        /* "contracts/queue/CallMarket.sol":10312:10323  return true */
      swap4
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":9518:10330  function submitAsk(uint256 price, uint256 volume)... */
      pop
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":12691:15644  function matchOrders()... */
    tag_63:
        /* "contracts/queue/CallMarket.sol":12786:12790  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":12754:12767  States.Closed */
      0x01
        /* "contracts/queue/CallMarket.sol":6218:6225  state_1 */
      dup1
        /* "contracts/queue/CallMarket.sol":6209:6225  state == state_1 */
      0x02
      dup2
      gt
      iszero
      tag_131
      jumpi
      invalid
    tag_131:
        /* "contracts/queue/CallMarket.sol":6209:6214  state */
      0x01
      0x14
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xff
      and
        /* "contracts/queue/CallMarket.sol":6209:6225  state == state_1 */
      0x02
      dup2
      gt
      iszero
      tag_132
      jumpi
      invalid
    tag_132:
      eq
        /* "contracts/queue/CallMarket.sol":6201:6226  require(state == state_1) */
      tag_133
      jumpi
      0x00
      dup1
      revert
    tag_133:
        /* "contracts/queue/CallMarket.sol":12814:12828  States.Settled */
      0x02
        /* "contracts/queue/CallMarket.sol":12806:12811  state */
      0x01
      0x14
        /* "contracts/queue/CallMarket.sol":12806:12828  state = States.Settled */
      0x0100
      exp
      dup2
      sload
      dup2
      0xff
      mul
      not
      and
      swap1
      dup4
      0x02
      dup2
      gt
      iszero
      tag_135
      jumpi
      invalid
    tag_135:
      mul
      or
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":12840:12855  uint256 BBPrice */
      0x00
        /* "contracts/queue/CallMarket.sol":12857:12873  address BBSender */
      dup1
        /* "contracts/queue/CallMarket.sol":12875:12891  uint256 BBVolume */
      0x00
        /* "contracts/queue/CallMarket.sol":12907:12920  priorityQueue */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":12907:12931  priorityQueue.buyListMax */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x9484d404
        /* "contracts/queue/CallMarket.sol":12907:12933  priorityQueue.buyListMax() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_136
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_136:
        /* "contracts/queue/CallMarket.sol":12907:12933  priorityQueue.buyListMax() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_137
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_137:
        /* "contracts/queue/CallMarket.sol":12907:12933  priorityQueue.buyListMax() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_138
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_138:
        /* "contracts/queue/CallMarket.sol":12907:12933  priorityQueue.buyListMax() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":12839:12933  (uint256 BBPrice, address BBSender, uint256 BBVolume) =... */
      swap3
      pop
      swap3
      pop
      swap3
      pop
        /* "contracts/queue/CallMarket.sol":12944:12959  uint256 BAPrice */
      0x00
        /* "contracts/queue/CallMarket.sol":12961:12977  address BASender */
      dup1
        /* "contracts/queue/CallMarket.sol":12979:12995  uint256 BAVolume */
      0x00
        /* "contracts/queue/CallMarket.sol":13011:13024  priorityQueue */
      dup1
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":13011:13036  priorityQueue.sellListMax */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x8a07bb65
        /* "contracts/queue/CallMarket.sol":13011:13038  priorityQueue.sellListMax() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_139
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_139:
        /* "contracts/queue/CallMarket.sol":13011:13038  priorityQueue.sellListMax() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_140
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_140:
        /* "contracts/queue/CallMarket.sol":13011:13038  priorityQueue.sellListMax() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_141
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_141:
        /* "contracts/queue/CallMarket.sol":13011:13038  priorityQueue.sellListMax() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":12943:13038  (uint256 BAPrice, address BASender, uint256 BAVolume) =... */
      swap3
      pop
      swap3
      pop
      swap3
      pop
        /* "contracts/queue/CallMarket.sol":13049:15617  while (BBPrice >= BAPrice) {... */
    tag_142:
        /* "contracts/queue/CallMarket.sol":13067:13074  BAPrice */
      dup3
        /* "contracts/queue/CallMarket.sol":13056:13063  BBPrice */
      dup7
        /* "contracts/queue/CallMarket.sol":13056:13074  BBPrice >= BAPrice */
      lt
        /* "contracts/queue/CallMarket.sol":13049:15617  while (BBPrice >= BAPrice) {... */
      tag_143
      jumpi
        /* "contracts/queue/CallMarket.sol":13105:13113  BAVolume */
      dup1
        /* "contracts/queue/CallMarket.sol":13094:13102  BBVolume */
      dup5
        /* "contracts/queue/CallMarket.sol":13094:13113  BBVolume > BAVolume */
      gt
        /* "contracts/queue/CallMarket.sol":13090:13727  if (BBVolume > BAVolume) {... */
      iszero
      tag_144
      jumpi
        /* "contracts/queue/CallMarket.sol":13164:13172  BAVolume */
      dup1
        /* "contracts/queue/CallMarket.sol":13133:13150  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":13133:13160  totalTokenBalance[BBSender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13151:13159  BBSender */
      dup8
        /* "contracts/queue/CallMarket.sol":13133:13160  totalTokenBalance[BBSender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13133:13172  totalTokenBalance[BBSender] += BAVolume */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13221:13228  BBPrice */
      dup6
        /* "contracts/queue/CallMarket.sol":13190:13207  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":13190:13217  totalEtherBalance[BBSender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13208:13216  BBSender */
      dup8
        /* "contracts/queue/CallMarket.sol":13190:13217  totalEtherBalance[BBSender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13190:13228  totalEtherBalance[BBSender] -= BBPrice */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13278:13285  BAPrice */
      dup3
        /* "contracts/queue/CallMarket.sol":13247:13264  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":13247:13274  totalEtherBalance[BASender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13265:13273  BASender */
      dup5
        /* "contracts/queue/CallMarket.sol":13247:13274  totalEtherBalance[BASender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13247:13285  totalEtherBalance[BASender] += BAPrice */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13334:13342  BAVolume */
      dup1
        /* "contracts/queue/CallMarket.sol":13303:13320  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":13303:13330  totalTokenBalance[BASender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13321:13329  BASender */
      dup5
        /* "contracts/queue/CallMarket.sol":13303:13330  totalTokenBalance[BASender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13303:13342  totalTokenBalance[BASender] -= BAVolume */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13383:13391  BAVolume */
      dup1
        /* "contracts/queue/CallMarket.sol":13372:13380  BBVolume */
      dup5
        /* "contracts/queue/CallMarket.sol":13372:13391  BBVolume - BAVolume */
      sub
        /* "contracts/queue/CallMarket.sol":13361:13391  BBVolume = BBVolume - BAVolume */
      swap4
      pop
        /* "contracts/queue/CallMarket.sol":13409:13422  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":13409:13440  priorityQueue.sellListMaxDelete */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x91447d32
        /* "contracts/queue/CallMarket.sol":13409:13442  priorityQueue.sellListMaxDelete() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_145
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_145:
        /* "contracts/queue/CallMarket.sol":13409:13442  priorityQueue.sellListMaxDelete() */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_146
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_146:
        /* "contracts/queue/CallMarket.sol":13409:13442  priorityQueue.sellListMaxDelete() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_147
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_147:
        /* "contracts/queue/CallMarket.sol":13409:13442  priorityQueue.sellListMaxDelete() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":13486:13499  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":13486:13514  priorityQueue.buyListisEmpty */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x211b0d3c
        /* "contracts/queue/CallMarket.sol":13486:13516  priorityQueue.buyListisEmpty() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_148
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_148:
        /* "contracts/queue/CallMarket.sol":13486:13516  priorityQueue.buyListisEmpty() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_149
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_149:
        /* "contracts/queue/CallMarket.sol":13486:13516  priorityQueue.buyListisEmpty() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_150
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_150:
        /* "contracts/queue/CallMarket.sol":13486:13516  priorityQueue.buyListisEmpty() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":13486:13571  priorityQueue.buyListisEmpty() ||... */
      dup1
      tag_151
      jumpi
      pop
        /* "contracts/queue/CallMarket.sol":13540:13553  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":13540:13569  priorityQueue.sellListisEmpty */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xcc0ba670
        /* "contracts/queue/CallMarket.sol":13540:13571  priorityQueue.sellListisEmpty() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_152
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_152:
        /* "contracts/queue/CallMarket.sol":13540:13571  priorityQueue.sellListisEmpty() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_153
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_153:
        /* "contracts/queue/CallMarket.sol":13540:13571  priorityQueue.sellListisEmpty() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_154
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_154:
        /* "contracts/queue/CallMarket.sol":13540:13571  priorityQueue.sellListisEmpty() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":13486:13571  priorityQueue.buyListisEmpty() ||... */
    tag_151:
        /* "contracts/queue/CallMarket.sol":13461:13636  if (... */
      iszero
      tag_155
      jumpi
        /* "contracts/queue/CallMarket.sol":13612:13617  break */
      jump(tag_143)
        /* "contracts/queue/CallMarket.sol":13461:13636  if (... */
    tag_155:
        /* "contracts/queue/CallMarket.sol":13685:13698  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":13685:13710  priorityQueue.sellListMax */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x8a07bb65
        /* "contracts/queue/CallMarket.sol":13685:13712  priorityQueue.sellListMax() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_156
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_156:
        /* "contracts/queue/CallMarket.sol":13685:13712  priorityQueue.sellListMax() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_157
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_157:
        /* "contracts/queue/CallMarket.sol":13685:13712  priorityQueue.sellListMax() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_158
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_158:
        /* "contracts/queue/CallMarket.sol":13685:13712  priorityQueue.sellListMax() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":13653:13712  (BAPrice, BASender, BAVolume) = priorityQueue.sellListMax() */
      dup1
      swap4
      pop
      dup2
      swap5
      pop
      dup3
      swap6
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":13090:13727  if (BBVolume > BAVolume) {... */
    tag_144:
        /* "contracts/queue/CallMarket.sol":13756:13764  BAVolume */
      dup1
        /* "contracts/queue/CallMarket.sol":13745:13753  BBVolume */
      dup5
        /* "contracts/queue/CallMarket.sol":13745:13764  BBVolume < BAVolume */
      lt
        /* "contracts/queue/CallMarket.sol":13741:14376  if (BBVolume < BAVolume) {... */
      iszero
      tag_159
      jumpi
        /* "contracts/queue/CallMarket.sol":13815:13823  BBVolume */
      dup4
        /* "contracts/queue/CallMarket.sol":13784:13801  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":13784:13811  totalTokenBalance[BBSender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13802:13810  BBSender */
      dup8
        /* "contracts/queue/CallMarket.sol":13784:13811  totalTokenBalance[BBSender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13784:13823  totalTokenBalance[BBSender] += BBVolume */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13872:13879  BBPrice */
      dup6
        /* "contracts/queue/CallMarket.sol":13841:13858  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":13841:13868  totalEtherBalance[BBSender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13859:13867  BBSender */
      dup8
        /* "contracts/queue/CallMarket.sol":13841:13868  totalEtherBalance[BBSender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13841:13879  totalEtherBalance[BBSender] -= BBPrice */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13929:13936  BAPrice */
      dup3
        /* "contracts/queue/CallMarket.sol":13898:13915  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":13898:13925  totalEtherBalance[BASender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13916:13924  BASender */
      dup5
        /* "contracts/queue/CallMarket.sol":13898:13925  totalEtherBalance[BASender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13898:13936  totalEtherBalance[BASender] += BAPrice */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":13985:13993  BBVolume */
      dup4
        /* "contracts/queue/CallMarket.sol":13954:13971  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":13954:13981  totalTokenBalance[BASender] */
      0x00
        /* "contracts/queue/CallMarket.sol":13972:13980  BASender */
      dup5
        /* "contracts/queue/CallMarket.sol":13954:13981  totalTokenBalance[BASender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":13954:13993  totalTokenBalance[BASender] -= BBVolume */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":14034:14042  BBVolume */
      dup4
        /* "contracts/queue/CallMarket.sol":14023:14031  BAVolume */
      dup2
        /* "contracts/queue/CallMarket.sol":14023:14042  BAVolume - BBVolume */
      sub
        /* "contracts/queue/CallMarket.sol":14012:14042  BAVolume = BAVolume - BBVolume */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":14060:14073  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14060:14090  priorityQueue.buyListMaxDelete */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x1b44d8d0
        /* "contracts/queue/CallMarket.sol":14060:14092  priorityQueue.buyListMaxDelete() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_160
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_160:
        /* "contracts/queue/CallMarket.sol":14060:14092  priorityQueue.buyListMaxDelete() */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_161
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_161:
        /* "contracts/queue/CallMarket.sol":14060:14092  priorityQueue.buyListMaxDelete() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_162
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_162:
        /* "contracts/queue/CallMarket.sol":14060:14092  priorityQueue.buyListMaxDelete() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14136:14149  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14136:14164  priorityQueue.buyListisEmpty */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x211b0d3c
        /* "contracts/queue/CallMarket.sol":14136:14166  priorityQueue.buyListisEmpty() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_163
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_163:
        /* "contracts/queue/CallMarket.sol":14136:14166  priorityQueue.buyListisEmpty() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_164
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_164:
        /* "contracts/queue/CallMarket.sol":14136:14166  priorityQueue.buyListisEmpty() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_165
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_165:
        /* "contracts/queue/CallMarket.sol":14136:14166  priorityQueue.buyListisEmpty() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14136:14221  priorityQueue.buyListisEmpty() ||... */
      dup1
      tag_166
      jumpi
      pop
        /* "contracts/queue/CallMarket.sol":14190:14203  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14190:14219  priorityQueue.sellListisEmpty */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xcc0ba670
        /* "contracts/queue/CallMarket.sol":14190:14221  priorityQueue.sellListisEmpty() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_167
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_167:
        /* "contracts/queue/CallMarket.sol":14190:14221  priorityQueue.sellListisEmpty() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_168
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_168:
        /* "contracts/queue/CallMarket.sol":14190:14221  priorityQueue.sellListisEmpty() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_169
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_169:
        /* "contracts/queue/CallMarket.sol":14190:14221  priorityQueue.sellListisEmpty() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14136:14221  priorityQueue.buyListisEmpty() ||... */
    tag_166:
        /* "contracts/queue/CallMarket.sol":14111:14286  if (... */
      iszero
      tag_170
      jumpi
        /* "contracts/queue/CallMarket.sol":14262:14267  break */
      jump(tag_143)
        /* "contracts/queue/CallMarket.sol":14111:14286  if (... */
    tag_170:
        /* "contracts/queue/CallMarket.sol":14335:14348  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14335:14359  priorityQueue.buyListMax */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x9484d404
        /* "contracts/queue/CallMarket.sol":14335:14361  priorityQueue.buyListMax() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_171
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_171:
        /* "contracts/queue/CallMarket.sol":14335:14361  priorityQueue.buyListMax() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_172
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_172:
        /* "contracts/queue/CallMarket.sol":14335:14361  priorityQueue.buyListMax() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_173
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_173:
        /* "contracts/queue/CallMarket.sol":14335:14361  priorityQueue.buyListMax() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14303:14361  (BBPrice, BBSender, BBVolume) = priorityQueue.buyListMax() */
      dup1
      swap7
      pop
      dup2
      swap8
      pop
      dup3
      swap9
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":13741:14376  if (BBVolume < BAVolume) {... */
    tag_159:
        /* "contracts/queue/CallMarket.sol":14406:14414  BAVolume */
      dup1
        /* "contracts/queue/CallMarket.sol":14394:14402  BBVolume */
      dup5
        /* "contracts/queue/CallMarket.sol":14394:14414  BBVolume == BAVolume */
      eq
        /* "contracts/queue/CallMarket.sol":14390:15106  if (BBVolume == BAVolume) {... */
      iszero
      tag_174
      jumpi
        /* "contracts/queue/CallMarket.sol":14465:14473  BBVolume */
      dup4
        /* "contracts/queue/CallMarket.sol":14434:14451  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":14434:14461  totalTokenBalance[BBSender] */
      0x00
        /* "contracts/queue/CallMarket.sol":14452:14460  BBSender */
      dup8
        /* "contracts/queue/CallMarket.sol":14434:14461  totalTokenBalance[BBSender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":14434:14473  totalTokenBalance[BBSender] += BBVolume */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":14522:14529  BBPrice */
      dup6
        /* "contracts/queue/CallMarket.sol":14491:14508  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":14491:14518  totalEtherBalance[BBSender] */
      0x00
        /* "contracts/queue/CallMarket.sol":14509:14517  BBSender */
      dup8
        /* "contracts/queue/CallMarket.sol":14491:14518  totalEtherBalance[BBSender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":14491:14529  totalEtherBalance[BBSender] -= BBPrice */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":14579:14586  BAPrice */
      dup3
        /* "contracts/queue/CallMarket.sol":14548:14565  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":14548:14575  totalEtherBalance[BASender] */
      0x00
        /* "contracts/queue/CallMarket.sol":14566:14574  BASender */
      dup5
        /* "contracts/queue/CallMarket.sol":14548:14575  totalEtherBalance[BASender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":14548:14586  totalEtherBalance[BASender] += BAPrice */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":14635:14643  BBVolume */
      dup4
        /* "contracts/queue/CallMarket.sol":14604:14621  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":14604:14631  totalTokenBalance[BASender] */
      0x00
        /* "contracts/queue/CallMarket.sol":14622:14630  BASender */
      dup5
        /* "contracts/queue/CallMarket.sol":14604:14631  totalTokenBalance[BASender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":14604:14643  totalTokenBalance[BASender] -= BBVolume */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":14662:14675  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14662:14692  priorityQueue.buyListMaxDelete */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x1b44d8d0
        /* "contracts/queue/CallMarket.sol":14662:14694  priorityQueue.buyListMaxDelete() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_175
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_175:
        /* "contracts/queue/CallMarket.sol":14662:14694  priorityQueue.buyListMaxDelete() */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_176
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_176:
        /* "contracts/queue/CallMarket.sol":14662:14694  priorityQueue.buyListMaxDelete() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_177
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_177:
        /* "contracts/queue/CallMarket.sol":14662:14694  priorityQueue.buyListMaxDelete() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14712:14725  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14712:14743  priorityQueue.sellListMaxDelete */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x91447d32
        /* "contracts/queue/CallMarket.sol":14712:14745  priorityQueue.sellListMaxDelete() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_178
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_178:
        /* "contracts/queue/CallMarket.sol":14712:14745  priorityQueue.sellListMaxDelete() */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_179
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_179:
        /* "contracts/queue/CallMarket.sol":14712:14745  priorityQueue.sellListMaxDelete() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_180
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_180:
        /* "contracts/queue/CallMarket.sol":14712:14745  priorityQueue.sellListMaxDelete() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14789:14802  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14789:14817  priorityQueue.buyListisEmpty */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x211b0d3c
        /* "contracts/queue/CallMarket.sol":14789:14819  priorityQueue.buyListisEmpty() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_181
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_181:
        /* "contracts/queue/CallMarket.sol":14789:14819  priorityQueue.buyListisEmpty() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_182
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_182:
        /* "contracts/queue/CallMarket.sol":14789:14819  priorityQueue.buyListisEmpty() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_183
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_183:
        /* "contracts/queue/CallMarket.sol":14789:14819  priorityQueue.buyListisEmpty() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14789:14874  priorityQueue.buyListisEmpty() ||... */
      dup1
      tag_184
      jumpi
      pop
        /* "contracts/queue/CallMarket.sol":14843:14856  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14843:14872  priorityQueue.sellListisEmpty */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xcc0ba670
        /* "contracts/queue/CallMarket.sol":14843:14874  priorityQueue.sellListisEmpty() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_185
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_185:
        /* "contracts/queue/CallMarket.sol":14843:14874  priorityQueue.sellListisEmpty() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_186
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_186:
        /* "contracts/queue/CallMarket.sol":14843:14874  priorityQueue.sellListisEmpty() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_187
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_187:
        /* "contracts/queue/CallMarket.sol":14843:14874  priorityQueue.sellListisEmpty() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14789:14874  priorityQueue.buyListisEmpty() ||... */
    tag_184:
        /* "contracts/queue/CallMarket.sol":14764:14939  if (... */
      iszero
      tag_188
      jumpi
        /* "contracts/queue/CallMarket.sol":14915:14920  break */
      jump(tag_143)
        /* "contracts/queue/CallMarket.sol":14764:14939  if (... */
    tag_188:
        /* "contracts/queue/CallMarket.sol":14988:15001  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":14988:15012  priorityQueue.buyListMax */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x9484d404
        /* "contracts/queue/CallMarket.sol":14988:15014  priorityQueue.buyListMax() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_189
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_189:
        /* "contracts/queue/CallMarket.sol":14988:15014  priorityQueue.buyListMax() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_190
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_190:
        /* "contracts/queue/CallMarket.sol":14988:15014  priorityQueue.buyListMax() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_191
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_191:
        /* "contracts/queue/CallMarket.sol":14988:15014  priorityQueue.buyListMax() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14956:15014  (BBPrice, BBSender, BBVolume) = priorityQueue.buyListMax() */
      dup1
      swap7
      pop
      dup2
      swap8
      pop
      dup3
      swap9
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":15064:15077  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":15064:15089  priorityQueue.sellListMax */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x8a07bb65
        /* "contracts/queue/CallMarket.sol":15064:15091  priorityQueue.sellListMax() */
      mload(0x40)
      dup2
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      0x60
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      dup7
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_192
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_192:
        /* "contracts/queue/CallMarket.sol":15064:15091  priorityQueue.sellListMax() */
      pop
      gas
      staticcall
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_193
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_193:
        /* "contracts/queue/CallMarket.sol":15064:15091  priorityQueue.sellListMax() */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x60
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_194
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_194:
        /* "contracts/queue/CallMarket.sol":15064:15091  priorityQueue.sellListMax() */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":15032:15091  (BAPrice, BASender, BAVolume) = priorityQueue.sellListMax() */
      dup1
      swap4
      pop
      dup2
      swap5
      pop
      dup3
      swap6
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":14390:15106  if (BBVolume == BAVolume) {... */
    tag_174:
        /* "contracts/queue/CallMarket.sol":13049:15617  while (BBPrice >= BAPrice) {... */
      jump(tag_142)
    tag_143:
        /* "contracts/queue/CallMarket.sol":15633:15637  true */
      0x01
        /* "contracts/queue/CallMarket.sol":15626:15637  return true */
      swap8
      pop
      pop
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":12691:15644  function matchOrders()... */
      pop
      swap1
      jump	// out
        /* "contracts/queue/CallMarket.sol":5672:5724  mapping(address => uint256) public totalEtherBalance */
    tag_67:
      mstore(0x20, 0x0b)
      dup1
      0x00
      mstore
      keccak256(0x00, 0x40)
      0x00
      swap2
      pop
      swap1
      pop
      sload
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":6944:7081  function depositEther() external payable returns (bool) {... */
    tag_69:
        /* "contracts/queue/CallMarket.sol":6994:6998  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":7043:7052  msg.value */
      callvalue
        /* "contracts/queue/CallMarket.sol":7010:7027  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":7010:7039  totalEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":7028:7038  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":7010:7039  totalEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":7010:7052  totalEtherBalance[msg.sender] += msg.value */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":7070:7074  true */
      0x01
        /* "contracts/queue/CallMarket.sol":7063:7074  return true */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":6944:7081  function depositEther() external payable returns (bool) {... */
      swap1
      jump	// out
        /* "contracts/queue/CallMarket.sol":5384:5413  uint256 public buylistCounter */
    tag_72:
      sload(0x05)
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":8086:8915  function submitBid(uint256 price, uint256 volume)... */
    tag_76:
        /* "contracts/queue/CallMarket.sol":8206:8210  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":8176:8187  States.Open */
      dup1
        /* "contracts/queue/CallMarket.sol":6218:6225  state_1 */
      dup1
        /* "contracts/queue/CallMarket.sol":6209:6225  state == state_1 */
      0x02
      dup2
      gt
      iszero
      tag_197
      jumpi
      invalid
    tag_197:
        /* "contracts/queue/CallMarket.sol":6209:6214  state */
      0x01
      0x14
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xff
      and
        /* "contracts/queue/CallMarket.sol":6209:6225  state == state_1 */
      0x02
      dup2
      gt
      iszero
      tag_198
      jumpi
      invalid
    tag_198:
      eq
        /* "contracts/queue/CallMarket.sol":6201:6226  require(state == state_1) */
      tag_199
      jumpi
      0x00
      dup1
      revert
    tag_199:
        /* "contracts/queue/CallMarket.sol":8345:8350  price */
      dup4
        /* "contracts/queue/CallMarket.sol":8336:8342  volume */
      dup4
        /* "contracts/queue/CallMarket.sol":8336:8350  volume * price */
      mul
        /* "contracts/queue/CallMarket.sol":8296:8319  unavailableEtherBalance */
      0x0c
        /* "contracts/queue/CallMarket.sol":8296:8331  unavailableEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":8320:8330  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":8296:8331  unavailableEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":8248:8265  totalEtherBalance */
      0x0b
        /* "contracts/queue/CallMarket.sol":8248:8277  totalEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":8266:8276  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":8248:8277  totalEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":8248:8331  totalEtherBalance[msg.sender] -... */
      sub
        /* "contracts/queue/CallMarket.sol":8247:8350  (totalEtherBalance[msg.sender] -... */
      lt
      iszero
        /* "contracts/queue/CallMarket.sol":8226:8404  require(... */
      tag_201
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x1c
      dup2
      mstore
      0x20
      add
      dup1
      0x45746865722062616c616e6365206973206e6f7420656e6f7567682100000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_201:
        /* "contracts/queue/CallMarket.sol":8415:8438  uint256 _finalpriceUint */
      0x00
        /* "contracts/queue/CallMarket.sol":8448:8479  string memory _finalpriceString */
      0x60
        /* "contracts/queue/CallMarket.sol":8509:8595  contcat(... */
      tag_202
        /* "contracts/queue/CallMarket.sol":8530:8546  uintTostr(price) */
      tag_203
        /* "contracts/queue/CallMarket.sol":8540:8545  price */
      dup8
        /* "contracts/queue/CallMarket.sol":8530:8539  uintTostr */
      tag_122
        /* "contracts/queue/CallMarket.sol":8530:8546  uintTostr(price) */
      jump	// in
    tag_203:
        /* "contracts/queue/CallMarket.sol":8560:8585  uintTostr(buylistCounter) */
      tag_204
        /* "contracts/queue/CallMarket.sol":8570:8584  buylistCounter */
      sload(0x05)
        /* "contracts/queue/CallMarket.sol":8560:8569  uintTostr */
      tag_122
        /* "contracts/queue/CallMarket.sol":8560:8585  uintTostr(buylistCounter) */
      jump	// in
    tag_204:
        /* "contracts/queue/CallMarket.sol":8509:8516  contcat */
      tag_124
        /* "contracts/queue/CallMarket.sol":8509:8595  contcat(... */
      jump	// in
    tag_202:
        /* "contracts/queue/CallMarket.sol":8489:8595  _finalpriceString = contcat(... */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":8623:8651  strTouint(_finalpriceString) */
      tag_205
        /* "contracts/queue/CallMarket.sol":8633:8650  _finalpriceString */
      dup2
        /* "contracts/queue/CallMarket.sol":8623:8632  strTouint */
      tag_126
        /* "contracts/queue/CallMarket.sol":8623:8651  strTouint(_finalpriceString) */
      jump	// in
    tag_205:
        /* "contracts/queue/CallMarket.sol":8605:8651  _finalpriceUint = strTouint(_finalpriceString) */
      swap2
      pop
        /* "contracts/queue/CallMarket.sol":8662:8671  numOrders */
      0x04
      0x00
        /* "contracts/queue/CallMarket.sol":8662:8673  numOrders++ */
      dup2
      sload
      dup1
      swap3
      swap2
      swap1
      0x01
      add
      swap2
      swap1
      pop
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":8683:8697  buylistCounter */
      0x05
      0x00
        /* "contracts/queue/CallMarket.sol":8683:8699  buylistCounter-- */
      dup2
      sload
      dup1
      swap3
      swap2
      swap1
      0x01
      swap1
      sub
      swap2
      swap1
      pop
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":8757:8762  price */
      dup6
        /* "contracts/queue/CallMarket.sol":8748:8754  volume */
      dup6
        /* "contracts/queue/CallMarket.sol":8748:8762  volume * price */
      mul
        /* "contracts/queue/CallMarket.sol":8709:8732  unavailableEtherBalance */
      0x0c
        /* "contracts/queue/CallMarket.sol":8709:8744  unavailableEtherBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":8733:8743  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":8709:8744  unavailableEtherBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":8709:8762  unavailableEtherBalance[msg.sender] += volume * price */
      dup3
      dup3
      sload
      add
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":8772:8793  unavailableEtherArray */
      0x0d
        /* "contracts/queue/CallMarket.sol":8799:8809  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":8772:8810  unavailableEtherArray.push(msg.sender) */
      swap1
      dup1
        /* "--CODEGEN--":39:40   */
      0x01
        /* "--CODEGEN--":33:36   */
      dup2
        /* "--CODEGEN--":27:37   */
      sload
        /* "--CODEGEN--":23:41   */
      add
        /* "--CODEGEN--":57:67   */
      dup1
        /* "--CODEGEN--":52:55   */
      dup3
        /* "--CODEGEN--":45:68   */
      sstore
        /* "--CODEGEN--":79:89   */
      dup1
        /* "--CODEGEN--":72:89   */
      swap2
      pop
        /* "--CODEGEN--":0:93   */
      pop
        /* "contracts/queue/CallMarket.sol":8772:8810  unavailableEtherArray.push(msg.sender) */
      swap1
      0x01
      dup3
      sub
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      0x00
      swap1
      swap2
      swap3
      swap1
      swap2
      swap1
      swap2
      0x0100
      exp
      dup2
      sload
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
      pop
        /* "contracts/queue/CallMarket.sol":8820:8833  priorityQueue */
      0x00
      dup1
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/CallMarket.sol":8820:8843  priorityQueue.insertBid */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0x502f8609
        /* "contracts/queue/CallMarket.sol":8844:8854  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":8856:8861  price */
      dup9
        /* "contracts/queue/CallMarket.sol":8863:8869  volume */
      dup9
        /* "contracts/queue/CallMarket.sol":8871:8886  _finalpriceUint */
      dup7
        /* "contracts/queue/CallMarket.sol":8820:8887  priorityQueue.insertBid(msg.sender, price, volume, _finalpriceUint) */
      mload(0x40)
      dup6
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      dup1
      dup6
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap5
      pop
      pop
      pop
      pop
      pop
      0x00
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_207
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_207:
        /* "contracts/queue/CallMarket.sol":8820:8887  priorityQueue.insertBid(msg.sender, price, volume, _finalpriceUint) */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_208
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_208:
        /* "contracts/queue/CallMarket.sol":8820:8887  priorityQueue.insertBid(msg.sender, price, volume, _finalpriceUint) */
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":8904:8908  true */
      0x01
        /* "contracts/queue/CallMarket.sol":8897:8908  return true */
      swap4
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":8086:8915  function submitBid(uint256 price, uint256 volume)... */
      pop
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":5730:5788  mapping(address => uint256) public unavailableEtherBalance */
    tag_80:
      mstore(0x20, 0x0c)
      dup1
      0x00
      mstore
      keccak256(0x00, 0x40)
      0x00
      swap2
      pop
      swap1
      pop
      sload
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":10465:10571  function closeMarket() external returns (bool) {... */
    tag_83:
        /* "contracts/queue/CallMarket.sol":10506:10510  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":10530:10543  States.Closed */
      0x01
        /* "contracts/queue/CallMarket.sol":10522:10527  state */
      dup1
      0x14
        /* "contracts/queue/CallMarket.sol":10522:10543  state = States.Closed */
      0x0100
      exp
      dup2
      sload
      dup2
      0xff
      mul
      not
      and
      swap1
      dup4
      0x02
      dup2
      gt
      iszero
      tag_210
      jumpi
      invalid
    tag_210:
      mul
      or
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":10560:10564  true */
      0x01
        /* "contracts/queue/CallMarket.sol":10553:10564  return true */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":10465:10571  function closeMarket() external returns (bool) {... */
      swap1
      jump	// out
        /* "contracts/queue/CallMarket.sol":5794:5832  address[] public unavailableEtherArray */
    tag_87:
      0x0d
      dup2
      dup2
      sload
      dup2
      lt
      tag_211
      jumpi
      invalid
    tag_211:
      swap1
      0x00
      mstore
      keccak256(0x00, 0x20)
      add
      0x00
      swap2
      pop
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":5287:5314  uint256 public creationTime */
    tag_90:
      sload(0x02)
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":5505:5557  mapping(address => uint256) public totalTokenBalance */
    tag_94:
      mstore(0x20, 0x08)
      dup1
      0x00
      mstore
      keccak256(0x00, 0x40)
      0x00
      swap2
      pop
      swap1
      pop
      sload
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":5563:5621  mapping(address => uint256) public unavailableTokenBalance */
    tag_98:
      mstore(0x20, 0x09)
      dup1
      0x00
      mstore
      keccak256(0x00, 0x40)
      0x00
      swap2
      pop
      swap1
      pop
      sload
      dup2
      jump	// out
        /* "contracts/queue/CallMarket.sol":15816:16291  function claimTokens(address token, uint256 numofTokens)... */
    tag_102:
        /* "contracts/queue/CallMarket.sol":15907:15911  bool */
      0x00
        /* "contracts/queue/CallMarket.sol":16037:16048  numofTokens */
      dup2
        /* "contracts/queue/CallMarket.sol":15997:16020  unavailableTokenBalance */
      0x09
        /* "contracts/queue/CallMarket.sol":15997:16032  unavailableTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":16021:16031  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":15997:16032  unavailableTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":15949:15966  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":15949:15978  totalTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":15967:15977  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":15949:15978  totalTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      sload
        /* "contracts/queue/CallMarket.sol":15949:16032  totalTokenBalance[msg.sender] -... */
      sub
        /* "contracts/queue/CallMarket.sol":15948:16048  (totalTokenBalance[msg.sender] -... */
      lt
      iszero
        /* "contracts/queue/CallMarket.sol":15927:16091  require(... */
      tag_214
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x11
      dup2
      mstore
      0x20
      add
      dup1
      0x4e6f7420656e6f75676820546f6b656e73000000000000000000000000000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_214:
        /* "contracts/queue/CallMarket.sol":16101:16126  uint256 tokensToBeClaimed */
      0x00
        /* "contracts/queue/CallMarket.sol":16129:16140  numofTokens */
      dup3
        /* "contracts/queue/CallMarket.sol":16101:16140  uint256 tokensToBeClaimed = numofTokens */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":16183:16200  tokensToBeClaimed */
      dup1
        /* "contracts/queue/CallMarket.sol":16150:16167  totalTokenBalance */
      0x08
        /* "contracts/queue/CallMarket.sol":16150:16179  totalTokenBalance[msg.sender] */
      0x00
        /* "contracts/queue/CallMarket.sol":16168:16178  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":16150:16179  totalTokenBalance[msg.sender] */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/CallMarket.sol":16150:16200  totalTokenBalance[msg.sender] -= tokensToBeClaimed */
      dup3
      dup3
      sload
      sub
      swap3
      pop
      pop
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/CallMarket.sol":16217:16222  token */
      dup4
        /* "contracts/queue/CallMarket.sol":16210:16232  IERC20(token).transfer */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xa9059cbb
        /* "contracts/queue/CallMarket.sol":16233:16243  msg.sender */
      caller
        /* "contracts/queue/CallMarket.sol":16245:16262  tokensToBeClaimed */
      dup4
        /* "contracts/queue/CallMarket.sol":16210:16263  IERC20(token).transfer(msg.sender, tokensToBeClaimed) */
      mload(0x40)
      dup4
      0xffffffff
      and
      0xe0
      shl
      dup2
      mstore
      0x04
      add
      dup1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap3
      pop
      pop
      pop
      0x20
      mload(0x40)
      dup1
      dup4
      sub
      dup2
      0x00
      dup8
      dup1
      extcodesize
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_215
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_215:
        /* "contracts/queue/CallMarket.sol":16210:16263  IERC20(token).transfer(msg.sender, tokensToBeClaimed) */
      pop
      gas
      call
      iszero
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_216
      jumpi
        /* "--CODEGEN--":45:61   */
      returndatasize
        /* "--CODEGEN--":42:43   */
      0x00
        /* "--CODEGEN--":39:40   */
      dup1
        /* "--CODEGEN--":24:62   */
      returndatacopy
        /* "--CODEGEN--":77:93   */
      returndatasize
        /* "--CODEGEN--":74:75   */
      0x00
        /* "--CODEGEN--":67:94   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_216:
        /* "contracts/queue/CallMarket.sol":16210:16263  IERC20(token).transfer(msg.sender, tokensToBeClaimed) */
      pop
      pop
      pop
      pop
      mload(0x40)
      returndatasize
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_217
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_217:
        /* "contracts/queue/CallMarket.sol":16210:16263  IERC20(token).transfer(msg.sender, tokensToBeClaimed) */
      dup2
      add
      swap1
      dup1
      dup1
      mload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":16280:16284  true */
      0x01
        /* "contracts/queue/CallMarket.sol":16273:16284  return true */
      swap2
      pop
      pop
        /* "contracts/queue/CallMarket.sol":15816:16291  function claimTokens(address token, uint256 numofTokens)... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":2959:3493  function uintTostr(uint256 intVar)... */
    tag_122:
        /* "contracts/queue/CallMarket.sol":3041:3068  string memory _uintAsString */
      0x60
        /* "contracts/queue/CallMarket.sol":3098:3099  0 */
      0x00
        /* "contracts/queue/CallMarket.sol":3088:3094  intVar */
      dup3
        /* "contracts/queue/CallMarket.sol":3088:3099  intVar == 0 */
      eq
        /* "contracts/queue/CallMarket.sol":3084:3136  if (intVar == 0) {... */
      iszero
      tag_219
      jumpi
        /* "contracts/queue/CallMarket.sol":3115:3125  return "0" */
      mload(0x40)
      dup1
      0x40
      add
      0x40
      mstore
      dup1
      0x01
      dup2
      mstore
      0x20
      add
      0x3000000000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      pop
      swap1
      pop
      jump(tag_218)
        /* "contracts/queue/CallMarket.sol":3084:3136  if (intVar == 0) {... */
    tag_219:
        /* "contracts/queue/CallMarket.sol":3145:3154  uint256 j */
      0x00
        /* "contracts/queue/CallMarket.sol":3157:3163  intVar */
      dup3
        /* "contracts/queue/CallMarket.sol":3145:3163  uint256 j = intVar */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":3173:3184  uint256 len */
      0x00
        /* "contracts/queue/CallMarket.sol":3194:3260  while (j != 0) {... */
    tag_220:
        /* "contracts/queue/CallMarket.sol":3206:3207  0 */
      0x00
        /* "contracts/queue/CallMarket.sol":3201:3202  j */
      dup3
        /* "contracts/queue/CallMarket.sol":3201:3207  j != 0 */
      eq
        /* "contracts/queue/CallMarket.sol":3194:3260  while (j != 0) {... */
      tag_221
      jumpi
        /* "contracts/queue/CallMarket.sol":3223:3228  len++ */
      dup1
      dup1
      0x01
      add
      swap2
      pop
      pop
        /* "contracts/queue/CallMarket.sol":3247:3249  10 */
      0x0a
        /* "contracts/queue/CallMarket.sol":3242:3249  j /= 10 */
      dup3
      dup2
      tag_222
      jumpi
      invalid
    tag_222:
      div
      swap2
      pop
        /* "contracts/queue/CallMarket.sol":3194:3260  while (j != 0) {... */
      jump(tag_220)
    tag_221:
        /* "contracts/queue/CallMarket.sol":3269:3286  bytes memory bstr */
      0x60
        /* "contracts/queue/CallMarket.sol":3299:3302  len */
      dup2
        /* "contracts/queue/CallMarket.sol":3289:3303  new bytes(len) */
      mload(0x40)
      swap1
      dup1
      dup3
      mstore
      dup1
      0x1f
      add
      not(0x1f)
      and
      0x20
      add
      dup3
      add
      0x40
      mstore
      dup1
      iszero
      tag_223
      jumpi
      dup2
      0x20
      add
        /* "--CODEGEN--":29:30   */
      0x01
        /* "--CODEGEN--":21:27   */
      dup3
        /* "--CODEGEN--":17:31   */
      mul
        /* "--CODEGEN--":116:120   */
      dup1
        /* "--CODEGEN--":104:114   */
      codesize
        /* "--CODEGEN--":96:102   */
      dup4
        /* "--CODEGEN--":87:121   */
      codecopy
        /* "--CODEGEN--":147:151   */
      dup1
        /* "--CODEGEN--":139:145   */
      dup3
        /* "--CODEGEN--":135:152   */
      add
        /* "--CODEGEN--":125:152   */
      swap2
      pop
        /* "--CODEGEN--":0:156   */
      pop
        /* "contracts/queue/CallMarket.sol":3289:3303  new bytes(len) */
      swap1
      pop
    tag_223:
      pop
        /* "contracts/queue/CallMarket.sol":3269:3303  bytes memory bstr = new bytes(len) */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":3313:3322  uint256 k */
      0x00
        /* "contracts/queue/CallMarket.sol":3331:3332  1 */
      0x01
        /* "contracts/queue/CallMarket.sol":3325:3328  len */
      dup4
        /* "contracts/queue/CallMarket.sol":3325:3332  len - 1 */
      sub
        /* "contracts/queue/CallMarket.sol":3313:3332  uint256 k = len - 1 */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":3342:3458  while (intVar != 0) {... */
    tag_224:
        /* "contracts/queue/CallMarket.sol":3359:3360  0 */
      0x00
        /* "contracts/queue/CallMarket.sol":3349:3355  intVar */
      dup7
        /* "contracts/queue/CallMarket.sol":3349:3360  intVar != 0 */
      eq
        /* "contracts/queue/CallMarket.sol":3342:3458  while (intVar != 0) {... */
      tag_225
      jumpi
        /* "contracts/queue/CallMarket.sol":3416:3418  10 */
      0x0a
        /* "contracts/queue/CallMarket.sol":3407:3413  intVar */
      dup7
        /* "contracts/queue/CallMarket.sol":3407:3418  intVar % 10 */
      dup2
      tag_226
      jumpi
      invalid
    tag_226:
      mod
        /* "contracts/queue/CallMarket.sol":3401:3403  48 */
      0x30
        /* "contracts/queue/CallMarket.sol":3401:3419  48 + (intVar % 10) */
      add
        /* "contracts/queue/CallMarket.sol":3388:3421  bytes1(uint8(48 + (intVar % 10))) */
      0xf8
      shl
        /* "contracts/queue/CallMarket.sol":3376:3380  bstr */
      dup3
        /* "contracts/queue/CallMarket.sol":3381:3384  k-- */
      dup3
      dup1
      0x01
      swap1
      sub
      swap4
      pop
        /* "contracts/queue/CallMarket.sol":3376:3385  bstr[k--] */
      dup2
      mload
      dup2
      lt
      tag_227
      jumpi
      invalid
    tag_227:
      0x20
      add
      add
        /* "contracts/queue/CallMarket.sol":3376:3421  bstr[k--] = bytes1(uint8(48 + (intVar % 10))) */
      swap1
      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
      and
      swap1
      dup2
      0x00
      byte
      swap1
      mstore8
      pop
        /* "contracts/queue/CallMarket.sol":3445:3447  10 */
      0x0a
        /* "contracts/queue/CallMarket.sol":3435:3447  intVar /= 10 */
      dup7
      dup2
      tag_228
      jumpi
      invalid
    tag_228:
      div
      swap6
      pop
        /* "contracts/queue/CallMarket.sol":3342:3458  while (intVar != 0) {... */
      jump(tag_224)
    tag_225:
        /* "contracts/queue/CallMarket.sol":3481:3485  bstr */
      dup2
        /* "contracts/queue/CallMarket.sol":3467:3486  return string(bstr) */
      swap5
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":2959:3493  function uintTostr(uint256 intVar)... */
    tag_218:
      swap2
      swap1
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":3578:3749  function contcat(string memory a, string memory b)... */
    tag_124:
        /* "contracts/queue/CallMarket.sol":3676:3689  string memory */
      0x60
        /* "contracts/queue/CallMarket.sol":3736:3737  a */
      dup3
        /* "contracts/queue/CallMarket.sol":3739:3740  b */
      dup3
        /* "contracts/queue/CallMarket.sol":3719:3741  abi.encodePacked(a, b) */
      add(0x20, mload(0x40))
      dup1
      dup4
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_230:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":36:189   */
      tag_232
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_230)
    tag_232:
        /* "--CODEGEN--":274:275   */
      0x01
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x0100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":3719:3741  abi.encodePacked(a, b) */
      pop
      pop
      pop
      swap1
      pop
      add
      dup3
      dup1
      mload
      swap1
      0x20
      add
      swap1
      dup1
      dup4
      dup4
        /* "--CODEGEN--":36:189   */
    tag_233:
        /* "--CODEGEN--":66:68   */
      0x20
        /* "--CODEGEN--":61:64   */
      dup4
        /* "--CODEGEN--":58:69   */
      lt
        /* "--CODEGEN--":36:189   */
      tag_235
      jumpi
        /* "--CODEGEN--":182:185   */
      dup1
        /* "--CODEGEN--":176:186   */
      mload
        /* "--CODEGEN--":171:174   */
      dup3
        /* "--CODEGEN--":164:187   */
      mstore
        /* "--CODEGEN--":98:100   */
      0x20
        /* "--CODEGEN--":93:96   */
      dup3
        /* "--CODEGEN--":89:101   */
      add
        /* "--CODEGEN--":82:101   */
      swap2
      pop
        /* "--CODEGEN--":123:125   */
      0x20
        /* "--CODEGEN--":118:121   */
      dup2
        /* "--CODEGEN--":114:126   */
      add
        /* "--CODEGEN--":107:126   */
      swap1
      pop
        /* "--CODEGEN--":148:150   */
      0x20
        /* "--CODEGEN--":143:146   */
      dup4
        /* "--CODEGEN--":139:151   */
      sub
        /* "--CODEGEN--":132:151   */
      swap3
      pop
        /* "--CODEGEN--":36:189   */
      jump(tag_233)
    tag_235:
        /* "--CODEGEN--":274:275   */
      0x01
        /* "--CODEGEN--":267:270   */
      dup4
        /* "--CODEGEN--":263:265   */
      0x20
        /* "--CODEGEN--":259:271   */
      sub
        /* "--CODEGEN--":254:257   */
      0x0100
        /* "--CODEGEN--":250:272   */
      exp
        /* "--CODEGEN--":246:276   */
      sub
        /* "--CODEGEN--":315:319   */
      dup1
        /* "--CODEGEN--":311:320   */
      not
        /* "--CODEGEN--":305:308   */
      dup3
        /* "--CODEGEN--":299:309   */
      mload
        /* "--CODEGEN--":295:321   */
      and
        /* "--CODEGEN--":356:360   */
      dup2
        /* "--CODEGEN--":350:353   */
      dup5
        /* "--CODEGEN--":344:354   */
      mload
        /* "--CODEGEN--":340:361   */
      and
        /* "--CODEGEN--":389:396   */
      dup1
        /* "--CODEGEN--":380:387   */
      dup3
        /* "--CODEGEN--":377:397   */
      or
        /* "--CODEGEN--":372:375   */
      dup6
        /* "--CODEGEN--":365:398   */
      mstore
        /* "--CODEGEN--":3:402   */
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":3719:3741  abi.encodePacked(a, b) */
      pop
      pop
      pop
      swap1
      pop
      add
      swap3
      pop
      pop
      pop
      mload(0x40)
        /* "--CODEGEN--":49:53   */
      0x20
        /* "--CODEGEN--":39:46   */
      dup2
        /* "--CODEGEN--":30:37   */
      dup4
        /* "--CODEGEN--":26:47   */
      sub
        /* "--CODEGEN--":22:54   */
      sub
        /* "--CODEGEN--":13:20   */
      dup2
        /* "--CODEGEN--":6:55   */
      mstore
        /* "contracts/queue/CallMarket.sol":3719:3741  abi.encodePacked(a, b) */
      swap1
      0x40
      mstore
        /* "contracts/queue/CallMarket.sol":3705:3742  return string(abi.encodePacked(a, b)) */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":3578:3749  function contcat(string memory a, string memory b)... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/queue/CallMarket.sol":2392:2794  function strTouint(string memory s) internal pure returns (uint256) {... */
    tag_126:
        /* "contracts/queue/CallMarket.sol":2451:2458  uint256 */
      0x00
        /* "contracts/queue/CallMarket.sol":2470:2484  bytes memory b */
      0x60
        /* "contracts/queue/CallMarket.sol":2493:2494  s */
      dup3
        /* "contracts/queue/CallMarket.sol":2470:2495  bytes memory b = bytes(s) */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":2505:2514  uint256 i */
      0x00
        /* "contracts/queue/CallMarket.sol":2524:2538  uint256 result */
      dup1
        /* "contracts/queue/CallMarket.sol":2541:2542  0 */
      0x00
        /* "contracts/queue/CallMarket.sol":2524:2542  uint256 result = 0 */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":2552:2561  uint256 j */
      0x00
        /* "contracts/queue/CallMarket.sol":2564:2565  b */
      dup4
        /* "contracts/queue/CallMarket.sol":2564:2572  b.length */
      mload
        /* "contracts/queue/CallMarket.sol":2552:2572  uint256 j = b.length */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":2591:2592  0 */
      0x00
        /* "contracts/queue/CallMarket.sol":2587:2592  i = 0 */
      swap3
      pop
        /* "contracts/queue/CallMarket.sol":2582:2764  for (i = 0; i < j; i++) {... */
    tag_237:
        /* "contracts/queue/CallMarket.sol":2598:2599  j */
      dup1
        /* "contracts/queue/CallMarket.sol":2594:2595  i */
      dup4
        /* "contracts/queue/CallMarket.sol":2594:2599  i < j */
      lt
        /* "contracts/queue/CallMarket.sol":2582:2764  for (i = 0; i < j; i++) {... */
      iszero
      tag_238
      jumpi
        /* "contracts/queue/CallMarket.sol":2620:2629  uint256 c */
      0x00
        /* "contracts/queue/CallMarket.sol":2646:2647  b */
      dup5
        /* "contracts/queue/CallMarket.sol":2648:2649  i */
      dup5
        /* "contracts/queue/CallMarket.sol":2646:2650  b[i] */
      dup2
      mload
      dup2
      lt
      tag_240
      jumpi
      invalid
    tag_240:
      0x20
      add
      add
      mload
      0xf8
      shr
      0xf8
      shl
        /* "contracts/queue/CallMarket.sol":2640:2651  uint8(b[i]) */
      0xf8
      shr
        /* "contracts/queue/CallMarket.sol":2632:2652  uint256(uint8(b[i])) */
      0xff
      and
        /* "contracts/queue/CallMarket.sol":2620:2652  uint256 c = uint256(uint8(b[i])) */
      swap1
      pop
        /* "contracts/queue/CallMarket.sol":2675:2677  48 */
      0x30
        /* "contracts/queue/CallMarket.sol":2670:2671  c */
      dup2
        /* "contracts/queue/CallMarket.sol":2670:2677  c >= 48 */
      lt
      iszero
        /* "contracts/queue/CallMarket.sol":2670:2688  c >= 48 && c <= 57 */
      dup1
      iszero
      tag_241
      jumpi
      pop
        /* "contracts/queue/CallMarket.sol":2686:2688  57 */
      0x39
        /* "contracts/queue/CallMarket.sol":2681:2682  c */
      dup2
        /* "contracts/queue/CallMarket.sol":2681:2688  c <= 57 */
      gt
      iszero
        /* "contracts/queue/CallMarket.sol":2670:2688  c >= 48 && c <= 57 */
    tag_241:
        /* "contracts/queue/CallMarket.sol":2666:2754  if (c >= 48 && c <= 57) {... */
      iszero
      tag_242
      jumpi
        /* "contracts/queue/CallMarket.sol":2736:2738  48 */
      0x30
        /* "contracts/queue/CallMarket.sol":2732:2733  c */
      dup2
        /* "contracts/queue/CallMarket.sol":2732:2738  c - 48 */
      sub
        /* "contracts/queue/CallMarket.sol":2726:2728  10 */
      0x0a
        /* "contracts/queue/CallMarket.sol":2717:2723  result */
      dup5
        /* "contracts/queue/CallMarket.sol":2717:2728  result * 10 */
      mul
        /* "contracts/queue/CallMarket.sol":2717:2739  result * 10 + (c - 48) */
      add
        /* "contracts/queue/CallMarket.sol":2708:2739  result = result * 10 + (c - 48) */
      swap3
      pop
        /* "contracts/queue/CallMarket.sol":2666:2754  if (c >= 48 && c <= 57) {... */
    tag_242:
        /* "contracts/queue/CallMarket.sol":2582:2764  for (i = 0; i < j; i++) {... */
      pop
        /* "contracts/queue/CallMarket.sol":2601:2604  i++ */
      dup3
      dup1
      0x01
      add
      swap4
      pop
      pop
        /* "contracts/queue/CallMarket.sol":2582:2764  for (i = 0; i < j; i++) {... */
      jump(tag_237)
    tag_238:
        /* "contracts/queue/CallMarket.sol":2781:2787  result */
      dup2
        /* "contracts/queue/CallMarket.sol":2774:2787  return result */
      swap5
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/CallMarket.sol":2392:2794  function strTouint(string memory s) internal pure returns (uint256) {... */
      swap2
      swap1
      pop
      jump	// out

    auxdata: 0xa265627a7a72315820184702eed1c6bd2a66dd08b3bc20b7f7cde80fba6c413acb1d9992e7871b654d64736f6c63430005110032
}

sub_1: assembly {
        /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
      mstore(0x40, 0x80)
        /* "contracts/queue/LinkedListMapping.sol":195:365  constructor() public {... */
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "contracts/queue/LinkedListMapping.sol":195:365  constructor() public {... */
      pop
        /* "contracts/queue/LinkedListMapping.sol":237:238  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":226:234  sellHead */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":226:238  sellHead = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":259:260  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":248:256  sellTail */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":248:260  sellTail = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":287:288  1 */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":270:284  sellistCounter */
      0x02
        /* "contracts/queue/LinkedListMapping.sol":270:288  sellistCounter = 1 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":308:309  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":298:305  buyHead */
      0x03
        /* "contracts/queue/LinkedListMapping.sol":298:309  buyHead = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":329:330  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":319:326  buyTail */
      0x04
        /* "contracts/queue/LinkedListMapping.sol":319:330  buyTail = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":357:358  1 */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":340:354  buyListCounter */
      0x05
        /* "contracts/queue/LinkedListMapping.sol":340:358  buyListCounter = 1 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
      dataSize(sub_0)
      dup1
      dataOffset(sub_0)
      0x00
      codecopy
      0x00
      return
    stop

    sub_0: assembly {
            /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
          mstore(0x40, 0x80)
          callvalue
            /* "--CODEGEN--":8:17   */
          dup1
            /* "--CODEGEN--":5:7   */
          iszero
          tag_1
          jumpi
            /* "--CODEGEN--":30:31   */
          0x00
            /* "--CODEGEN--":27:28   */
          dup1
            /* "--CODEGEN--":20:32   */
          revert
            /* "--CODEGEN--":5:7   */
        tag_1:
            /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
          pop
          jumpi(tag_2, lt(calldatasize, 0x04))
          shr(0xe0, calldataload(0x00))
          dup1
          0x91447d32
          gt
          tag_20
          jumpi
          dup1
          0xa78b7907
          gt
          tag_21
          jumpi
          dup1
          0xa78b7907
          eq
          tag_15
          jumpi
          dup1
          0xa7da8ee8
          eq
          tag_16
          jumpi
          dup1
          0xbae0ca97
          eq
          tag_17
          jumpi
          dup1
          0xbfa1eb98
          eq
          tag_18
          jumpi
          dup1
          0xcc0ba670
          eq
          tag_19
          jumpi
          jump(tag_2)
        tag_21:
          dup1
          0x91447d32
          eq
          tag_11
          jumpi
          dup1
          0x9484d404
          eq
          tag_12
          jumpi
          dup1
          0x9ecf86c8
          eq
          tag_13
          jumpi
          dup1
          0xa390283f
          eq
          tag_14
          jumpi
          jump(tag_2)
        tag_20:
          dup1
          0x502f8609
          gt
          tag_22
          jumpi
          dup1
          0x502f8609
          eq
          tag_7
          jumpi
          dup1
          0x63ddcc02
          eq
          tag_8
          jumpi
          dup1
          0x69abe5ac
          eq
          tag_9
          jumpi
          dup1
          0x8a07bb65
          eq
          tag_10
          jumpi
          jump(tag_2)
        tag_22:
          dup1
          0x08f93112
          eq
          tag_3
          jumpi
          dup1
          0x1b44d8d0
          eq
          tag_4
          jumpi
          dup1
          0x211b0d3c
          eq
          tag_5
          jumpi
          dup1
          0x403e9974
          eq
          tag_6
          jumpi
        tag_2:
          0x00
          dup1
          revert
            /* "contracts/queue/LinkedListMapping.sol":1645:1667  uint256 public buyTail */
        tag_3:
          tag_23
          tag_24
          jump	// in
        tag_23:
          mload(0x40)
          dup1
          dup3
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":6235:7504  function buyListMaxDelete()... */
        tag_4:
          tag_25
          tag_26
          jump	// in
        tag_25:
          mload(0x40)
          dup1
          dup5
          dup2
          mstore
          0x20
          add
          dup4
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          dup3
          dup2
          mstore
          0x20
          add
          swap4
          pop
          pop
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":8167:8335  function buyListisEmpty() external view returns (bool) {... */
        tag_5:
          tag_27
          tag_28
          jump	// in
        tag_27:
          mload(0x40)
          dup1
          dup3
          iszero
          iszero
          iszero
          iszero
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1523:1546  uint256 public sellHead */
        tag_6:
          tag_29
          tag_30
          jump	// in
        tag_29:
          mload(0x40)
          dup1
          dup3
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
        tag_7:
          tag_31
          0x04
          dup1
          calldatasize
          sub
            /* "--CODEGEN--":13:16   */
          0x80
            /* "--CODEGEN--":8:11   */
          dup2
            /* "--CODEGEN--":5:17   */
          lt
            /* "--CODEGEN--":2:4   */
          iszero
          tag_32
          jumpi
            /* "--CODEGEN--":30:31   */
          0x00
            /* "--CODEGEN--":27:28   */
          dup1
            /* "--CODEGEN--":20:32   */
          revert
            /* "--CODEGEN--":2:4   */
        tag_32:
            /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
          dup2
          add
          swap1
          dup1
          dup1
          calldataload
          0xffffffffffffffffffffffffffffffffffffffff
          and
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          pop
          pop
          pop
          tag_33
          jump	// in
        tag_31:
          stop
            /* "contracts/queue/LinkedListMapping.sol":14711:14807  function deletePQ(address payable callmarket) external {... */
        tag_8:
          tag_34
          0x04
          dup1
          calldatasize
          sub
            /* "--CODEGEN--":13:15   */
          0x20
            /* "--CODEGEN--":8:11   */
          dup2
            /* "--CODEGEN--":5:16   */
          lt
            /* "--CODEGEN--":2:4   */
          iszero
          tag_35
          jumpi
            /* "--CODEGEN--":29:30   */
          0x00
            /* "--CODEGEN--":26:27   */
          dup1
            /* "--CODEGEN--":19:31   */
          revert
            /* "--CODEGEN--":2:4   */
        tag_35:
            /* "contracts/queue/LinkedListMapping.sol":14711:14807  function deletePQ(address payable callmarket) external {... */
          dup2
          add
          swap1
          dup1
          dup1
          calldataload
          0xffffffffffffffffffffffffffffffffffffffff
          and
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          pop
          pop
          pop
          tag_36
          jump	// in
        tag_34:
          stop
            /* "contracts/queue/LinkedListMapping.sol":1581:1610  uint256 public sellistCounter */
        tag_9:
          tag_37
          tag_38
          jump	// in
        tag_37:
          mload(0x40)
          dup1
          dup3
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":13948:14343  function sellListMax()... */
        tag_10:
          tag_39
          tag_40
          jump	// in
        tag_39:
          mload(0x40)
          dup1
          dup5
          dup2
          mstore
          0x20
          add
          dup4
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          dup3
          dup2
          mstore
          0x20
          add
          swap4
          pop
          pop
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":12696:13825  function sellListMaxDelete()... */
        tag_11:
          tag_41
          tag_42
          jump	// in
        tag_41:
          mload(0x40)
          dup1
          dup5
          dup2
          mstore
          0x20
          add
          dup4
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          dup3
          dup2
          mstore
          0x20
          add
          swap4
          pop
          pop
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":7708:8093  function buyListMax()... */
        tag_12:
          tag_43
          tag_44
          jump	// in
        tag_43:
          mload(0x40)
          dup1
          dup5
          dup2
          mstore
          0x20
          add
          dup4
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          dup3
          dup2
          mstore
          0x20
          add
          swap4
          pop
          pop
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1762:1808  mapping(uint256 => OrderStruct) public buyList */
        tag_13:
          tag_45
          0x04
          dup1
          calldatasize
          sub
            /* "--CODEGEN--":13:15   */
          0x20
            /* "--CODEGEN--":8:11   */
          dup2
            /* "--CODEGEN--":5:16   */
          lt
            /* "--CODEGEN--":2:4   */
          iszero
          tag_46
          jumpi
            /* "--CODEGEN--":29:30   */
          0x00
            /* "--CODEGEN--":26:27   */
          dup1
            /* "--CODEGEN--":19:31   */
          revert
            /* "--CODEGEN--":2:4   */
        tag_46:
            /* "contracts/queue/LinkedListMapping.sol":1762:1808  mapping(uint256 => OrderStruct) public buyList */
          dup2
          add
          swap1
          dup1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          pop
          pop
          pop
          tag_47
          jump	// in
        tag_45:
          mload(0x40)
          dup1
          dup9
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          dup8
          dup2
          mstore
          0x20
          add
          dup7
          dup2
          mstore
          0x20
          add
          dup6
          dup2
          mstore
          0x20
          add
          dup5
          dup2
          mstore
          0x20
          add
          dup4
          dup2
          mstore
          0x20
          add
          dup3
          dup2
          mstore
          0x20
          add
          swap8
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1673:1702  uint256 public buyListCounter */
        tag_14:
          tag_48
          tag_49
          jump	// in
        tag_48:
          mload(0x40)
          dup1
          dup3
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
        tag_15:
          tag_50
          0x04
          dup1
          calldatasize
          sub
            /* "--CODEGEN--":13:16   */
          0x80
            /* "--CODEGEN--":8:11   */
          dup2
            /* "--CODEGEN--":5:17   */
          lt
            /* "--CODEGEN--":2:4   */
          iszero
          tag_51
          jumpi
            /* "--CODEGEN--":30:31   */
          0x00
            /* "--CODEGEN--":27:28   */
          dup1
            /* "--CODEGEN--":20:32   */
          revert
            /* "--CODEGEN--":2:4   */
        tag_51:
            /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
          dup2
          add
          swap1
          dup1
          dup1
          calldataload
          0xffffffffffffffffffffffffffffffffffffffff
          and
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          pop
          pop
          pop
          tag_52
          jump	// in
        tag_50:
          stop
            /* "contracts/queue/LinkedListMapping.sol":1709:1756  mapping(uint256 => OrderStruct) public sellList */
        tag_16:
          tag_53
          0x04
          dup1
          calldatasize
          sub
            /* "--CODEGEN--":13:15   */
          0x20
            /* "--CODEGEN--":8:11   */
          dup2
            /* "--CODEGEN--":5:16   */
          lt
            /* "--CODEGEN--":2:4   */
          iszero
          tag_54
          jumpi
            /* "--CODEGEN--":29:30   */
          0x00
            /* "--CODEGEN--":26:27   */
          dup1
            /* "--CODEGEN--":19:31   */
          revert
            /* "--CODEGEN--":2:4   */
        tag_54:
            /* "contracts/queue/LinkedListMapping.sol":1709:1756  mapping(uint256 => OrderStruct) public sellList */
          dup2
          add
          swap1
          dup1
          dup1
          calldataload
          swap1
          0x20
          add
          swap1
          swap3
          swap2
          swap1
          pop
          pop
          pop
          tag_55
          jump	// in
        tag_53:
          mload(0x40)
          dup1
          dup9
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          dup8
          dup2
          mstore
          0x20
          add
          dup7
          dup2
          mstore
          0x20
          add
          dup6
          dup2
          mstore
          0x20
          add
          dup5
          dup2
          mstore
          0x20
          add
          dup4
          dup2
          mstore
          0x20
          add
          dup3
          dup2
          mstore
          0x20
          add
          swap8
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1617:1639  uint256 public buyHead */
        tag_17:
          tag_56
          tag_57
          jump	// in
        tag_56:
          mload(0x40)
          dup1
          dup3
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1552:1575  uint256 public sellTail */
        tag_18:
          tag_58
          tag_59
          jump	// in
        tag_58:
          mload(0x40)
          dup1
          dup3
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":14418:14588  function sellListisEmpty() external view returns (bool) {... */
        tag_19:
          tag_60
          tag_61
          jump	// in
        tag_60:
          mload(0x40)
          dup1
          dup3
          iszero
          iszero
          iszero
          iszero
          dup2
          mstore
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          return
            /* "contracts/queue/LinkedListMapping.sol":1645:1667  uint256 public buyTail */
        tag_24:
          sload(0x04)
          dup2
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":6235:7504  function buyListMaxDelete()... */
        tag_26:
            /* "contracts/queue/LinkedListMapping.sol":6310:6317  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6331:6338  address */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":6352:6359  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6384:6415  OrderStruct memory removeObject */
          tag_63
          tag_64
          jump	// in
        tag_63:
            /* "contracts/queue/LinkedListMapping.sol":6418:6425  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":6418:6434  buyList[buyHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6426:6433  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":6418:6434  buyList[buyHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":6384:6434  OrderStruct memory removeObject = buyList[buyHead] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":6444:6458  uint256 _price */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6461:6473  removeObject */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":6461:6479  removeObject.Price */
          0x20
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":6444:6479  uint256 _price = removeObject.Price */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":6489:6504  address _sender */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6507:6519  removeObject */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":6507:6526  removeObject.Sender */
          0x00
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":6489:6526  address _sender = removeObject.Sender */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":6536:6551  uint256 _volume */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6554:6566  removeObject */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":6554:6573  removeObject.Volume */
          0x40
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":6536:6573  uint256 _volume = removeObject.Volume */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":6599:6606  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":6588:6595  buyTail */
          sload(0x04)
            /* "contracts/queue/LinkedListMapping.sol":6588:6606  buyTail == buyHead */
          eq
            /* "contracts/queue/LinkedListMapping.sol":6584:6776  if (buyTail == buyHead) {... */
          iszero
          tag_65
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":6632:6633  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6622:6629  buyHead */
          0x03
            /* "contracts/queue/LinkedListMapping.sol":6622:6633  buyHead = 0 */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":6657:6658  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6647:6654  buyTail */
          0x04
            /* "contracts/queue/LinkedListMapping.sol":6647:6658  buyTail = 0 */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":6584:6776  if (buyTail == buyHead) {... */
          jump(tag_66)
        tag_65:
            /* "contracts/queue/LinkedListMapping.sol":6699:6711  removeObject */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":6699:6716  removeObject.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":6689:6696  buyHead */
          0x03
            /* "contracts/queue/LinkedListMapping.sol":6689:6716  buyHead = removeObject.next */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":6764:6765  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6730:6737  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":6730:6756  buyList[removeObject.next] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6738:6750  removeObject */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":6738:6755  removeObject.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":6730:6756  buyList[removeObject.next] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":6730:6761  buyList[removeObject.next].prev */
          0x06
          add
            /* "contracts/queue/LinkedListMapping.sol":6730:6765  buyList[removeObject.next].prev = 0 */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":6584:6776  if (buyTail == buyHead) {... */
        tag_66:
            /* "contracts/queue/LinkedListMapping.sol":6793:6800  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":6793:6817  buyList[removeObject.id] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6801:6813  removeObject */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":6801:6816  removeObject.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":6793:6817  buyList[removeObject.id] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6786:6817  delete buyList[removeObject.id] */
          dup1
          dup3
          add
          exp(0x0100, 0x00)
          dup2
          sload
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          mul
          not
          and
          swap1
          sstore
          0x01
          dup3
          add
          0x00
          swap1
          sstore
          0x02
          dup3
          add
          0x00
          swap1
          sstore
          0x03
          dup3
          add
          0x00
          swap1
          sstore
          0x04
          dup3
          add
          0x00
          swap1
          sstore
          0x05
          dup3
          add
          0x00
          swap1
          sstore
          0x06
          dup3
          add
          0x00
          swap1
          sstore
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":6835:6841  _price */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":6843:6850  _sender */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":6852:6859  _volume */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":6827:6860  return (_price, _sender, _volume) */
          swap7
          pop
          swap7
          pop
          swap7
          pop
          pop
          pop
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":6235:7504  function buyListMaxDelete()... */
          swap1
          swap2
          swap3
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":8167:8335  function buyListisEmpty() external view returns (bool) {... */
        tag_28:
            /* "contracts/queue/LinkedListMapping.sol":8216:8220  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8247:8248  0 */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":8236:8243  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":8236:8248  buyHead == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":8232:8329  if (buyHead == 0) {... */
          iszero
          tag_68
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":8271:8275  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":8264:8275  return true */
          swap1
          pop
          jump(tag_67)
            /* "contracts/queue/LinkedListMapping.sol":8232:8329  if (buyHead == 0) {... */
        tag_68:
            /* "contracts/queue/LinkedListMapping.sol":8313:8318  false */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8306:8318  return false */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":8167:8335  function buyListisEmpty() external view returns (bool) {... */
        tag_67:
          swap1
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1523:1546  uint256 public sellHead */
        tag_30:
          sload(0x00)
          dup2
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
        tag_33:
            /* "contracts/queue/LinkedListMapping.sol":2076:2102  OrderStruct memory current */
          tag_71
          tag_64
          jump	// in
        tag_71:
            /* "contracts/queue/LinkedListMapping.sol":2105:2112  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":2105:2121  buyList[buyHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":2113:2120  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":2105:2121  buyList[buyHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":2076:2121  OrderStruct memory current = buyList[buyHead] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":2131:2414  while (... */
        tag_72:
            /* "contracts/queue/LinkedListMapping.sol":2165:2166  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":2151:2158  current */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":2151:2161  current.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":2151:2166  current.id != 0 */
          eq
          iszero
            /* "contracts/queue/LinkedListMapping.sol":2151:2198  current.id != 0 && auxprice <= current.AuxPrice */
          dup1
          iszero
          tag_74
          jumpi
          pop
            /* "contracts/queue/LinkedListMapping.sol":2182:2189  current */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":2182:2198  current.AuxPrice */
          0x60
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":2170:2178  auxprice */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":2170:2198  auxprice <= current.AuxPrice */
          gt
          iszero
            /* "contracts/queue/LinkedListMapping.sol":2151:2198  current.id != 0 && auxprice <= current.AuxPrice */
        tag_74:
            /* "contracts/queue/LinkedListMapping.sol":2131:2414  while (... */
          iszero
          tag_73
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":2295:2302  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":2295:2316  buyList[current.next] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":2303:2310  current */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":2303:2315  current.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":2295:2316  buyList[current.next] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":2285:2316  current = buyList[current.next] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":2131:2414  while (... */
          jump(tag_72)
        tag_73:
            /* "contracts/queue/LinkedListMapping.sol":2456:2457  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":2440:2447  current */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":2440:2452  current.prev */
          0xc0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":2440:2457  current.prev == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":2423:2843  if (... */
          iszero
          tag_75
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":2594:2641  buyListAddHead(sender, price, volume, auxprice) */
          tag_76
            /* "contracts/queue/LinkedListMapping.sol":2609:2615  sender */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":2617:2622  price */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":2624:2630  volume */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":2632:2640  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":2594:2608  buyListAddHead */
          tag_77
            /* "contracts/queue/LinkedListMapping.sol":2594:2641  buyListAddHead(sender, price, volume, auxprice) */
          jump	// in
        tag_76:
          pop
            /* "contracts/queue/LinkedListMapping.sol":2423:2843  if (... */
          jump(tag_78)
        tag_75:
            /* "contracts/queue/LinkedListMapping.sol":2767:2832  buyListInsertAfter(current.prev, sender, price, volume, auxprice) */
          tag_79
            /* "contracts/queue/LinkedListMapping.sol":2786:2793  current */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":2786:2798  current.prev */
          0xc0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":2800:2806  sender */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":2808:2813  price */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":2815:2821  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":2823:2831  auxprice */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":2767:2785  buyListInsertAfter */
          tag_80
            /* "contracts/queue/LinkedListMapping.sol":2767:2832  buyListInsertAfter(current.prev, sender, price, volume, auxprice) */
          jump	// in
        tag_79:
          pop
            /* "contracts/queue/LinkedListMapping.sol":2423:2843  if (... */
        tag_78:
            /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":14711:14807  function deletePQ(address payable callmarket) external {... */
        tag_36:
            /* "contracts/queue/LinkedListMapping.sol":14789:14799  callmarket */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":14776:14800  selfdestruct(callmarket) */
          0xffffffffffffffffffffffffffffffffffffffff
          and
          selfdestruct
            /* "contracts/queue/LinkedListMapping.sol":1581:1610  uint256 public sellistCounter */
        tag_38:
          sload(0x02)
          dup2
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":13948:14343  function sellListMax()... */
        tag_40:
            /* "contracts/queue/LinkedListMapping.sol":14031:14038  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14052:14059  address */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":14073:14080  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14125:14126  0 */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":14113:14121  sellHead */
          sload(0x00)
            /* "contracts/queue/LinkedListMapping.sol":14113:14126  sellHead != 0 */
          eq
          iszero
            /* "contracts/queue/LinkedListMapping.sol":14105:14149  require(sellHead != 0, "sellList is empty!") */
          tag_83
          jumpi
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x04
          add
          dup1
          dup1
          0x20
          add
          dup3
          dup2
          sub
          dup3
          mstore
          0x12
          dup2
          mstore
          0x20
          add
          dup1
          0x73656c6c4c69737420697320656d707479210000000000000000000000000000
          dup2
          mstore
          pop
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          revert
        tag_83:
            /* "contracts/queue/LinkedListMapping.sol":14224:14232  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":14224:14242  sellList[sellHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14233:14241  sellHead */
          dup1
          sload
            /* "contracts/queue/LinkedListMapping.sol":14224:14242  sellList[sellHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":14224:14248  sellList[sellHead].Price */
          0x01
          add
          sload
            /* "contracts/queue/LinkedListMapping.sol":14262:14270  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":14262:14280  sellList[sellHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14271:14279  sellHead */
          dup1
          sload
            /* "contracts/queue/LinkedListMapping.sol":14262:14280  sellList[sellHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":14262:14287  sellList[sellHead].Sender */
          0x00
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
            /* "contracts/queue/LinkedListMapping.sol":14301:14309  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":14301:14319  sellList[sellHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14310:14318  sellHead */
          dup1
          sload
            /* "contracts/queue/LinkedListMapping.sol":14301:14319  sellList[sellHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":14301:14326  sellList[sellHead].Volume */
          0x02
          add
          sload
            /* "contracts/queue/LinkedListMapping.sol":14203:14336  return (... */
          swap3
          pop
          swap3
          pop
          swap3
          pop
            /* "contracts/queue/LinkedListMapping.sol":13948:14343  function sellListMax()... */
          swap1
          swap2
          swap3
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":12696:13825  function sellListMaxDelete()... */
        tag_42:
            /* "contracts/queue/LinkedListMapping.sol":12772:12779  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12793:12800  address */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":12814:12821  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12846:12877  OrderStruct memory removeObject */
          tag_85
          tag_64
          jump	// in
        tag_85:
            /* "contracts/queue/LinkedListMapping.sol":12880:12888  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":12880:12898  sellList[sellHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12889:12897  sellHead */
          dup1
          sload
            /* "contracts/queue/LinkedListMapping.sol":12880:12898  sellList[sellHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":12846:12898  OrderStruct memory removeObject = sellList[sellHead] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":12908:12922  uint256 _price */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12925:12937  removeObject */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":12925:12943  removeObject.Price */
          0x20
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":12908:12943  uint256 _price = removeObject.Price */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":12953:12968  address _sender */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12971:12983  removeObject */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":12971:12990  removeObject.Sender */
          0x00
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":12953:12990  address _sender = removeObject.Sender */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":13000:13015  uint256 _volume */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13018:13030  removeObject */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":13018:13037  removeObject.Volume */
          0x40
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":13000:13037  uint256 _volume = removeObject.Volume */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":13064:13072  sellHead */
          sload(0x00)
            /* "contracts/queue/LinkedListMapping.sol":13052:13060  sellTail */
          sload(0x01)
            /* "contracts/queue/LinkedListMapping.sol":13052:13072  sellTail == sellHead */
          eq
            /* "contracts/queue/LinkedListMapping.sol":13048:13246  if (sellTail == sellHead) {... */
          iszero
          tag_86
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":13099:13100  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13088:13096  sellHead */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":13088:13100  sellHead = 0 */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":13125:13126  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13114:13122  sellTail */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":13114:13126  sellTail = 0 */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":13048:13246  if (sellTail == sellHead) {... */
          jump(tag_87)
        tag_86:
            /* "contracts/queue/LinkedListMapping.sol":13168:13180  removeObject */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":13168:13185  removeObject.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":13157:13165  sellHead */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13157:13185  sellHead = removeObject.next */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":13234:13235  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13199:13207  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":13199:13226  sellList[removeObject.next] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13208:13220  removeObject */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":13208:13225  removeObject.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":13199:13226  sellList[removeObject.next] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":13199:13231  sellList[removeObject.next].prev */
          0x06
          add
            /* "contracts/queue/LinkedListMapping.sol":13199:13235  sellList[removeObject.next].prev = 0 */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":13048:13246  if (sellTail == sellHead) {... */
        tag_87:
            /* "contracts/queue/LinkedListMapping.sol":13263:13271  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":13263:13288  sellList[removeObject.id] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13272:13284  removeObject */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":13272:13287  removeObject.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":13263:13288  sellList[removeObject.id] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
          0x00
            /* "contracts/queue/LinkedListMapping.sol":13256:13288  delete sellList[removeObject.id] */
          dup1
          dup3
          add
          exp(0x0100, 0x00)
          dup2
          sload
          swap1
          0xffffffffffffffffffffffffffffffffffffffff
          mul
          not
          and
          swap1
          sstore
          0x01
          dup3
          add
          0x00
          swap1
          sstore
          0x02
          dup3
          add
          0x00
          swap1
          sstore
          0x03
          dup3
          add
          0x00
          swap1
          sstore
          0x04
          dup3
          add
          0x00
          swap1
          sstore
          0x05
          dup3
          add
          0x00
          swap1
          sstore
          0x06
          dup3
          add
          0x00
          swap1
          sstore
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":13306:13312  _price */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":13314:13321  _sender */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":13323:13330  _volume */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":13298:13331  return (_price, _sender, _volume) */
          swap7
          pop
          swap7
          pop
          swap7
          pop
          pop
          pop
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":12696:13825  function sellListMaxDelete()... */
          swap1
          swap2
          swap3
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":7708:8093  function buyListMax()... */
        tag_44:
            /* "contracts/queue/LinkedListMapping.sol":7790:7797  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":7811:7818  address */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":7832:7839  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":7883:7884  0 */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":7872:7879  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":7872:7884  buyHead != 0 */
          eq
          iszero
            /* "contracts/queue/LinkedListMapping.sol":7864:7906  require(buyHead != 0, "buyList is empty!") */
          tag_89
          jumpi
          mload(0x40)
          0x08c379a000000000000000000000000000000000000000000000000000000000
          dup2
          mstore
          0x04
          add
          dup1
          dup1
          0x20
          add
          dup3
          dup2
          sub
          dup3
          mstore
          0x11
          dup2
          mstore
          0x20
          add
          dup1
          0x6275794c69737420697320656d70747921000000000000000000000000000000
          dup2
          mstore
          pop
          0x20
          add
          swap2
          pop
          pop
          mload(0x40)
          dup1
          swap2
          sub
          swap1
          revert
        tag_89:
            /* "contracts/queue/LinkedListMapping.sol":7980:7987  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":7980:7996  buyList[buyHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":7988:7995  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":7980:7996  buyList[buyHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":7980:8002  buyList[buyHead].Price */
          0x01
          add
          sload
            /* "contracts/queue/LinkedListMapping.sol":8016:8023  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":8016:8032  buyList[buyHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8024:8031  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":8016:8032  buyList[buyHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":8016:8039  buyList[buyHead].Sender */
          0x00
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
            /* "contracts/queue/LinkedListMapping.sol":8053:8060  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":8053:8069  buyList[buyHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8061:8068  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":8053:8069  buyList[buyHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":8053:8076  buyList[buyHead].Volume */
          0x02
          add
          sload
            /* "contracts/queue/LinkedListMapping.sol":7959:8086  return (... */
          swap3
          pop
          swap3
          pop
          swap3
          pop
            /* "contracts/queue/LinkedListMapping.sol":7708:8093  function buyListMax()... */
          swap1
          swap2
          swap3
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1762:1808  mapping(uint256 => OrderStruct) public buyList */
        tag_47:
          mstore(0x20, 0x07)
          dup1
          0x00
          mstore
          keccak256(0x00, 0x40)
          0x00
          swap2
          pop
          swap1
          pop
          dup1
          0x00
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          swap1
          dup1
          0x01
          add
          sload
          swap1
          dup1
          0x02
          add
          sload
          swap1
          dup1
          0x03
          add
          sload
          swap1
          dup1
          0x04
          add
          sload
          swap1
          dup1
          0x05
          add
          sload
          swap1
          dup1
          0x06
          add
          sload
          swap1
          pop
          dup8
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1673:1702  uint256 public buyListCounter */
        tag_49:
          sload(0x05)
          dup2
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
        tag_52:
            /* "contracts/queue/LinkedListMapping.sol":8650:8676  OrderStruct memory current */
          tag_91
          tag_64
          jump	// in
        tag_91:
            /* "contracts/queue/LinkedListMapping.sol":8679:8687  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":8679:8697  sellList[sellHead] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8688:8696  sellHead */
          dup1
          sload
            /* "contracts/queue/LinkedListMapping.sol":8679:8697  sellList[sellHead] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":8650:8697  OrderStruct memory current = sellList[sellHead] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":8707:8986  while (... */
        tag_92:
            /* "contracts/queue/LinkedListMapping.sol":8741:8742  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8727:8734  current */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":8727:8737  current.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":8727:8742  current.id != 0 */
          eq
          iszero
            /* "contracts/queue/LinkedListMapping.sol":8727:8774  current.id != 0 && auxprice >= current.AuxPrice */
          dup1
          iszero
          tag_94
          jumpi
          pop
            /* "contracts/queue/LinkedListMapping.sol":8758:8765  current */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":8758:8774  current.AuxPrice */
          0x60
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":8746:8754  auxprice */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":8746:8774  auxprice >= current.AuxPrice */
          lt
          iszero
            /* "contracts/queue/LinkedListMapping.sol":8727:8774  current.id != 0 && auxprice >= current.AuxPrice */
        tag_94:
            /* "contracts/queue/LinkedListMapping.sol":8707:8986  while (... */
          iszero
          tag_93
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":8871:8879  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":8871:8893  sellList[current.next] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":8880:8887  current */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":8880:8892  current.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":8871:8893  sellList[current.next] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":8861:8893  current = sellList[current.next] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":8707:8986  while (... */
          jump(tag_92)
        tag_93:
            /* "contracts/queue/LinkedListMapping.sol":9028:9029  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":9012:9019  current */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":9012:9024  current.prev */
          0xc0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":9012:9029  current.prev == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":8995:9412  if (... */
          iszero
          tag_95
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":9161:9209  sellListAddHead(sender, price, volume, auxprice) */
          tag_96
            /* "contracts/queue/LinkedListMapping.sol":9177:9183  sender */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9185:9190  price */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9192:9198  volume */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9200:9208  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9161:9176  sellListAddHead */
          tag_97
            /* "contracts/queue/LinkedListMapping.sol":9161:9209  sellListAddHead(sender, price, volume, auxprice) */
          jump	// in
        tag_96:
          pop
            /* "contracts/queue/LinkedListMapping.sol":8995:9412  if (... */
          jump(tag_98)
        tag_95:
            /* "contracts/queue/LinkedListMapping.sol":9335:9401  sellListInsertAfter(current.prev, sender, price, volume, auxprice) */
          tag_99
            /* "contracts/queue/LinkedListMapping.sol":9355:9362  current */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":9355:9367  current.prev */
          0xc0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":9369:9375  sender */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":9377:9382  price */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":9384:9390  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":9392:9400  auxprice */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":9335:9354  sellListInsertAfter */
          tag_100
            /* "contracts/queue/LinkedListMapping.sol":9335:9401  sellListInsertAfter(current.prev, sender, price, volume, auxprice) */
          jump	// in
        tag_99:
          pop
            /* "contracts/queue/LinkedListMapping.sol":8995:9412  if (... */
        tag_98:
            /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1709:1756  mapping(uint256 => OrderStruct) public sellList */
        tag_55:
          mstore(0x20, 0x06)
          dup1
          0x00
          mstore
          keccak256(0x00, 0x40)
          0x00
          swap2
          pop
          swap1
          pop
          dup1
          0x00
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          swap1
          dup1
          0x01
          add
          sload
          swap1
          dup1
          0x02
          add
          sload
          swap1
          dup1
          0x03
          add
          sload
          swap1
          dup1
          0x04
          add
          sload
          swap1
          dup1
          0x05
          add
          sload
          swap1
          dup1
          0x06
          add
          sload
          swap1
          pop
          dup8
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1617:1639  uint256 public buyHead */
        tag_57:
          sload(0x03)
          dup2
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":1552:1575  uint256 public sellTail */
        tag_59:
          sload(0x01)
          dup2
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":14418:14588  function sellListisEmpty() external view returns (bool) {... */
        tag_61:
            /* "contracts/queue/LinkedListMapping.sol":14468:14472  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14500:14501  0 */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":14488:14496  sellHead */
          sload(0x00)
            /* "contracts/queue/LinkedListMapping.sol":14488:14501  sellHead == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":14484:14582  if (sellHead == 0) {... */
          iszero
          tag_102
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":14524:14528  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":14517:14528  return true */
          swap1
          pop
          jump(tag_101)
            /* "contracts/queue/LinkedListMapping.sol":14484:14582  if (sellHead == 0) {... */
        tag_102:
            /* "contracts/queue/LinkedListMapping.sol":14566:14571  false */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":14559:14571  return false */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":14418:14588  function sellListisEmpty() external view returns (bool) {... */
        tag_101:
          swap1
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":4784:5177  function buyListAddHead(... */
        tag_77:
            /* "contracts/queue/LinkedListMapping.sol":4929:4936  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":4948:4964  uint256 ordertId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":4967:5019  buyListCreateObject(sender, price, volume, auxprice) */
          tag_105
            /* "contracts/queue/LinkedListMapping.sol":4987:4993  sender */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":4995:5000  price */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":5002:5008  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":5010:5018  auxprice */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":4967:4986  buyListCreateObject */
          tag_106
            /* "contracts/queue/LinkedListMapping.sol":4967:5019  buyListCreateObject(sender, price, volume, auxprice) */
          jump	// in
        tag_105:
            /* "contracts/queue/LinkedListMapping.sol":4948:5019  uint256 ordertId = buyListCreateObject(sender, price, volume, auxprice) */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":5029:5059  buyListLink(ordertId, buyHead) */
          tag_107
            /* "contracts/queue/LinkedListMapping.sol":5041:5049  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":5051:5058  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":5029:5040  buyListLink */
          tag_108
            /* "contracts/queue/LinkedListMapping.sol":5029:5059  buyListLink(ordertId, buyHead) */
          jump	// in
        tag_107:
            /* "contracts/queue/LinkedListMapping.sol":5069:5093  buyListSetHead(ordertId) */
          tag_109
            /* "contracts/queue/LinkedListMapping.sol":5084:5092  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":5069:5083  buyListSetHead */
          tag_110
            /* "contracts/queue/LinkedListMapping.sol":5069:5093  buyListSetHead(ordertId) */
          jump	// in
        tag_109:
          pop
            /* "contracts/queue/LinkedListMapping.sol":5118:5119  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5107:5114  buyTail */
          sload(0x04)
            /* "contracts/queue/LinkedListMapping.sol":5107:5119  buyTail == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":5103:5145  if (buyTail == 0) buyListSetTail(ordertId) */
          iszero
          tag_111
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":5121:5145  buyListSetTail(ordertId) */
          tag_112
            /* "contracts/queue/LinkedListMapping.sol":5136:5144  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":5121:5135  buyListSetTail */
          tag_113
            /* "contracts/queue/LinkedListMapping.sol":5121:5145  buyListSetTail(ordertId) */
          jump	// in
        tag_112:
          pop
            /* "contracts/queue/LinkedListMapping.sol":5103:5145  if (buyTail == 0) buyListSetTail(ordertId) */
        tag_111:
            /* "contracts/queue/LinkedListMapping.sol":5162:5170  ordertId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":5155:5170  return ordertId */
          swap2
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":4784:5177  function buyListAddHead(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":2927:3588  function buyListInsertAfter(... */
        tag_80:
            /* "contracts/queue/LinkedListMapping.sol":3100:3104  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":3130:3137  buyTail */
          sload(0x04)
            /* "contracts/queue/LinkedListMapping.sol":3120:3126  prevId */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":3120:3137  prevId == buyTail */
          eq
            /* "contracts/queue/LinkedListMapping.sol":3116:3561  if (prevId == buyTail) {... */
          iszero
          tag_115
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":3153:3200  buyListAddTail(sender, price, volume, auxprice) */
          tag_116
            /* "contracts/queue/LinkedListMapping.sol":3168:3174  sender */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":3176:3181  price */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":3183:3189  volume */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":3191:3199  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":3153:3167  buyListAddTail */
          tag_117
            /* "contracts/queue/LinkedListMapping.sol":3153:3200  buyListAddTail(sender, price, volume, auxprice) */
          jump	// in
        tag_116:
          pop
            /* "contracts/queue/LinkedListMapping.sol":3116:3561  if (prevId == buyTail) {... */
          jump(tag_118)
        tag_115:
            /* "contracts/queue/LinkedListMapping.sol":3231:3259  OrderStruct memory prevOrder */
          tag_119
          tag_64
          jump	// in
        tag_119:
            /* "contracts/queue/LinkedListMapping.sol":3262:3269  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":3262:3277  buyList[prevId] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":3270:3276  prevId */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":3262:3277  buyList[prevId] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":3231:3277  OrderStruct memory prevOrder = buyList[prevId] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":3291:3319  OrderStruct memory nextOrder */
          tag_120
          tag_64
          jump	// in
        tag_120:
            /* "contracts/queue/LinkedListMapping.sol":3322:3329  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":3322:3345  buyList[prevOrder.next] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":3330:3339  prevOrder */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":3330:3344  prevOrder.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":3322:3345  buyList[prevOrder.next] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":3291:3345  OrderStruct memory nextOrder = buyList[prevOrder.next] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":3359:3377  uint256 newOrderId */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":3396:3448  buyListCreateObject(sender, price, volume, auxprice) */
          tag_121
            /* "contracts/queue/LinkedListMapping.sol":3416:3422  sender */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":3424:3429  price */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":3431:3437  volume */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":3439:3447  auxprice */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":3396:3415  buyListCreateObject */
          tag_106
            /* "contracts/queue/LinkedListMapping.sol":3396:3448  buyListCreateObject(sender, price, volume, auxprice) */
          jump	// in
        tag_121:
            /* "contracts/queue/LinkedListMapping.sol":3359:3448  uint256 newOrderId =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":3462:3499  buyListLink(newOrderId, nextOrder.id) */
          tag_122
            /* "contracts/queue/LinkedListMapping.sol":3474:3484  newOrderId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":3486:3495  nextOrder */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":3486:3498  nextOrder.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":3462:3473  buyListLink */
          tag_108
            /* "contracts/queue/LinkedListMapping.sol":3462:3499  buyListLink(newOrderId, nextOrder.id) */
          jump	// in
        tag_122:
            /* "contracts/queue/LinkedListMapping.sol":3513:3550  buyListLink(prevOrder.id, newOrderId) */
          tag_123
            /* "contracts/queue/LinkedListMapping.sol":3525:3534  prevOrder */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":3525:3537  prevOrder.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":3539:3549  newOrderId */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":3513:3524  buyListLink */
          tag_108
            /* "contracts/queue/LinkedListMapping.sol":3513:3550  buyListLink(prevOrder.id, newOrderId) */
          jump	// in
        tag_123:
            /* "contracts/queue/LinkedListMapping.sol":3116:3561  if (prevId == buyTail) {... */
          pop
          pop
          pop
        tag_118:
            /* "contracts/queue/LinkedListMapping.sol":3577:3581  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":3570:3581  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":2927:3588  function buyListInsertAfter(... */
          swap6
          swap5
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":11375:11787  function sellListAddHead(... */
        tag_97:
            /* "contracts/queue/LinkedListMapping.sol":11521:11528  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":11540:11556  uint256 ordertId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":11571:11624  sellListCreateObject(sender, price, volume, auxprice) */
          tag_125
            /* "contracts/queue/LinkedListMapping.sol":11592:11598  sender */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11600:11605  price */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11607:11613  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11615:11623  auxprice */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11571:11591  sellListCreateObject */
          tag_126
            /* "contracts/queue/LinkedListMapping.sol":11571:11624  sellListCreateObject(sender, price, volume, auxprice) */
          jump	// in
        tag_125:
            /* "contracts/queue/LinkedListMapping.sol":11540:11624  uint256 ordertId =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":11634:11666  sellListLink(ordertId, sellHead) */
          tag_127
            /* "contracts/queue/LinkedListMapping.sol":11647:11655  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":11657:11665  sellHead */
          sload(0x00)
            /* "contracts/queue/LinkedListMapping.sol":11634:11646  sellListLink */
          tag_128
            /* "contracts/queue/LinkedListMapping.sol":11634:11666  sellListLink(ordertId, sellHead) */
          jump	// in
        tag_127:
          pop
            /* "contracts/queue/LinkedListMapping.sol":11676:11701  sellListSetHead(ordertId) */
          tag_129
            /* "contracts/queue/LinkedListMapping.sol":11692:11700  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":11676:11691  sellListSetHead */
          tag_130
            /* "contracts/queue/LinkedListMapping.sol":11676:11701  sellListSetHead(ordertId) */
          jump	// in
        tag_129:
          pop
            /* "contracts/queue/LinkedListMapping.sol":11727:11728  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":11715:11723  sellTail */
          sload(0x01)
            /* "contracts/queue/LinkedListMapping.sol":11715:11728  sellTail == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":11711:11755  if (sellTail == 0) sellListSetTail(ordertId) */
          iszero
          tag_131
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":11730:11755  sellListSetTail(ordertId) */
          tag_132
            /* "contracts/queue/LinkedListMapping.sol":11746:11754  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":11730:11745  sellListSetTail */
          tag_133
            /* "contracts/queue/LinkedListMapping.sol":11730:11755  sellListSetTail(ordertId) */
          jump	// in
        tag_132:
          pop
            /* "contracts/queue/LinkedListMapping.sol":11711:11755  if (sellTail == 0) sellListSetTail(ordertId) */
        tag_131:
            /* "contracts/queue/LinkedListMapping.sol":11772:11780  ordertId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":11765:11780  return ordertId */
          swap2
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":11375:11787  function sellListAddHead(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":9496:10165  function sellListInsertAfter(... */
        tag_100:
            /* "contracts/queue/LinkedListMapping.sol":9670:9674  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":9700:9708  sellTail */
          sload(0x01)
            /* "contracts/queue/LinkedListMapping.sol":9690:9696  prevId */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":9690:9708  prevId == sellTail */
          eq
            /* "contracts/queue/LinkedListMapping.sol":9686:10138  if (prevId == sellTail) {... */
          iszero
          tag_135
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":9724:9772  sellListAddTail(sender, price, volume, auxprice) */
          tag_136
            /* "contracts/queue/LinkedListMapping.sol":9740:9746  sender */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9748:9753  price */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9755:9761  volume */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9763:9771  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":9724:9739  sellListAddTail */
          tag_137
            /* "contracts/queue/LinkedListMapping.sol":9724:9772  sellListAddTail(sender, price, volume, auxprice) */
          jump	// in
        tag_136:
          pop
            /* "contracts/queue/LinkedListMapping.sol":9686:10138  if (prevId == sellTail) {... */
          jump(tag_138)
        tag_135:
            /* "contracts/queue/LinkedListMapping.sol":9803:9831  OrderStruct memory prevOrder */
          tag_139
          tag_64
          jump	// in
        tag_139:
            /* "contracts/queue/LinkedListMapping.sol":9834:9842  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":9834:9850  sellList[prevId] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":9843:9849  prevId */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":9834:9850  sellList[prevId] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":9803:9850  OrderStruct memory prevOrder = sellList[prevId] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":9864:9892  OrderStruct memory nextOrder */
          tag_140
          tag_64
          jump	// in
        tag_140:
            /* "contracts/queue/LinkedListMapping.sol":9895:9903  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":9895:9919  sellList[prevOrder.next] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":9904:9913  prevOrder */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":9904:9918  prevOrder.next */
          0xa0
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":9895:9919  sellList[prevOrder.next] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":9864:9919  OrderStruct memory nextOrder = sellList[prevOrder.next] */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          swap1
          dup2
          0x00
          dup3
          add
          0x00
          swap1
          sload
          swap1
          0x0100
          exp
          swap1
          div
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
          0x01
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x02
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x03
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x04
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x05
          dup3
          add
          sload
          dup2
          mstore
          0x20
          add
          0x06
          dup3
          add
          sload
          dup2
          mstore
          pop
          pop
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":9933:9951  uint256 newOrderId */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":9970:10023  sellListCreateObject(sender, price, volume, auxprice) */
          tag_141
            /* "contracts/queue/LinkedListMapping.sol":9991:9997  sender */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":9999:10004  price */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":10006:10012  volume */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":10014:10022  auxprice */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":9970:9990  sellListCreateObject */
          tag_126
            /* "contracts/queue/LinkedListMapping.sol":9970:10023  sellListCreateObject(sender, price, volume, auxprice) */
          jump	// in
        tag_141:
            /* "contracts/queue/LinkedListMapping.sol":9933:10023  uint256 newOrderId =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":10037:10075  sellListLink(newOrderId, nextOrder.id) */
          tag_142
            /* "contracts/queue/LinkedListMapping.sol":10050:10060  newOrderId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":10062:10071  nextOrder */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":10062:10074  nextOrder.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":10037:10049  sellListLink */
          tag_128
            /* "contracts/queue/LinkedListMapping.sol":10037:10075  sellListLink(newOrderId, nextOrder.id) */
          jump	// in
        tag_142:
          pop
            /* "contracts/queue/LinkedListMapping.sol":10089:10127  sellListLink(prevOrder.id, newOrderId) */
          tag_143
            /* "contracts/queue/LinkedListMapping.sol":10102:10111  prevOrder */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":10102:10114  prevOrder.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":10116:10126  newOrderId */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":10089:10101  sellListLink */
          tag_128
            /* "contracts/queue/LinkedListMapping.sol":10089:10127  sellListLink(prevOrder.id, newOrderId) */
          jump	// in
        tag_143:
          pop
            /* "contracts/queue/LinkedListMapping.sol":9686:10138  if (prevId == sellTail) {... */
          pop
          pop
          pop
        tag_138:
            /* "contracts/queue/LinkedListMapping.sol":10154:10158  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":10147:10158  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":9496:10165  function sellListInsertAfter(... */
          swap6
          swap5
          pop
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":5460:5858  function buyListCreateObject(... */
        tag_106:
            /* "contracts/queue/LinkedListMapping.sol":5610:5617  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5629:5642  uint256 newId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":5645:5659  buyListCounter */
          sload(0x05)
            /* "contracts/queue/LinkedListMapping.sol":5629:5659  uint256 newId = buyListCounter */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":5669:5683  buyListCounter */
          0x05
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5669:5685  buyListCounter++ */
          dup2
          sload
          dup1
          swap3
          swap2
          swap1
          0x01
          add
          swap2
          swap1
          pop
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":5695:5719  OrderStruct memory order */
          tag_145
          tag_64
          jump	// in
        tag_145:
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          dup1
            /* "contracts/queue/LinkedListMapping.sol":5746:5752  sender */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":5754:5759  price */
          dup8
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":5761:5767  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":5769:5777  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":5779:5784  newId */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":5786:5787  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":5789:5790  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":5695:5791  OrderStruct memory order =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":5821:5826  order */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":5801:5808  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":5801:5818  buyList[order.id] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5809:5814  order */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":5809:5817  order.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":5801:5818  buyList[order.id] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":5801:5826  buyList[order.id] = order */
          0x00
          dup3
          add
          mload
          dup2
          0x00
          add
          exp(0x0100, 0x00)
          dup2
          sload
          dup2
          0xffffffffffffffffffffffffffffffffffffffff
          mul
          not
          and
          swap1
          dup4
          0xffffffffffffffffffffffffffffffffffffffff
          and
          mul
          or
          swap1
          sstore
          pop
          0x20
          dup3
          add
          mload
          dup2
          0x01
          add
          sstore
          0x40
          dup3
          add
          mload
          dup2
          0x02
          add
          sstore
          0x60
          dup3
          add
          mload
          dup2
          0x03
          add
          sstore
          0x80
          dup3
          add
          mload
          dup2
          0x04
          add
          sstore
          0xa0
          dup3
          add
          mload
          dup2
          0x05
          add
          sstore
          0xc0
          dup3
          add
          mload
          dup2
          0x06
          add
          sstore
          swap1
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":5843:5848  order */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":5843:5851  order.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":5836:5851  return order.id */
          swap3
          pop
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":5460:5858  function buyListCreateObject(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":5945:6092  function buyListLink(uint256 prevId, uint256 nextId) internal {... */
        tag_108:
            /* "contracts/queue/LinkedListMapping.sol":6040:6046  nextId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":6017:6024  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":6017:6032  buyList[prevId] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6025:6031  prevId */
          dup5
            /* "contracts/queue/LinkedListMapping.sol":6017:6032  buyList[prevId] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":6017:6037  buyList[prevId].next */
          0x05
          add
            /* "contracts/queue/LinkedListMapping.sol":6017:6046  buyList[prevId].next = nextId */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":6079:6085  prevId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":6056:6063  buyList */
          0x07
            /* "contracts/queue/LinkedListMapping.sol":6056:6071  buyList[nextId] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":6064:6070  nextId */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":6056:6071  buyList[nextId] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":6056:6076  buyList[nextId].prev */
          0x06
          add
            /* "contracts/queue/LinkedListMapping.sol":6056:6085  buyList[nextId].prev = prevId */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":5945:6092  function buyListLink(uint256 prevId, uint256 nextId) internal {... */
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":5264:5374  function buyListSetHead(uint256 id) internal returns (bool) {... */
        tag_110:
            /* "contracts/queue/LinkedListMapping.sol":5318:5322  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":5344:5346  id */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":5334:5341  buyHead */
          0x03
            /* "contracts/queue/LinkedListMapping.sol":5334:5346  buyHead = id */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":5363:5367  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":5356:5367  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":5264:5374  function buyListSetHead(uint256 id) internal returns (bool) {... */
          swap2
          swap1
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":4668:4778  function buyListSetTail(uint256 id) internal returns (bool) {... */
        tag_113:
            /* "contracts/queue/LinkedListMapping.sol":4722:4726  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":4748:4750  id */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":4738:4745  buyTail */
          0x04
            /* "contracts/queue/LinkedListMapping.sol":4738:4750  buyTail = id */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":4767:4771  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":4760:4771  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":4668:4778  function buyListSetTail(uint256 id) internal returns (bool) {... */
          swap2
          swap1
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":4183:4662  function buyListAddTail(... */
        tag_117:
            /* "contracts/queue/LinkedListMapping.sol":4328:4332  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":4359:4360  0 */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":4348:4355  buyHead */
          sload(0x03)
            /* "contracts/queue/LinkedListMapping.sol":4348:4360  buyHead == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":4344:4634  if (buyHead == 0) {... */
          iszero
          tag_150
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":4376:4423  buyListAddHead(sender, price, volume, auxprice) */
          tag_151
            /* "contracts/queue/LinkedListMapping.sol":4391:4397  sender */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":4399:4404  price */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":4406:4412  volume */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":4414:4422  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":4376:4390  buyListAddHead */
          tag_77
            /* "contracts/queue/LinkedListMapping.sol":4376:4423  buyListAddHead(sender, price, volume, auxprice) */
          jump	// in
        tag_151:
          pop
            /* "contracts/queue/LinkedListMapping.sol":4344:4634  if (buyHead == 0) {... */
          jump(tag_152)
        tag_150:
            /* "contracts/queue/LinkedListMapping.sol":4454:4470  uint256 ordertId */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":4489:4541  buyListCreateObject(sender, price, volume, auxprice) */
          tag_153
            /* "contracts/queue/LinkedListMapping.sol":4509:4515  sender */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":4517:4522  price */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":4524:4530  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":4532:4540  auxprice */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":4489:4508  buyListCreateObject */
          tag_106
            /* "contracts/queue/LinkedListMapping.sol":4489:4541  buyListCreateObject(sender, price, volume, auxprice) */
          jump	// in
        tag_153:
            /* "contracts/queue/LinkedListMapping.sol":4454:4541  uint256 ordertId =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":4555:4585  buyListLink(buyTail, ordertId) */
          tag_154
            /* "contracts/queue/LinkedListMapping.sol":4567:4574  buyTail */
          sload(0x04)
            /* "contracts/queue/LinkedListMapping.sol":4576:4584  ordertId */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":4555:4566  buyListLink */
          tag_108
            /* "contracts/queue/LinkedListMapping.sol":4555:4585  buyListLink(buyTail, ordertId) */
          jump	// in
        tag_154:
            /* "contracts/queue/LinkedListMapping.sol":4599:4623  buyListSetTail(ordertId) */
          tag_155
            /* "contracts/queue/LinkedListMapping.sol":4614:4622  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":4599:4613  buyListSetTail */
          tag_113
            /* "contracts/queue/LinkedListMapping.sol":4599:4623  buyListSetTail(ordertId) */
          jump	// in
        tag_155:
          pop
            /* "contracts/queue/LinkedListMapping.sol":4344:4634  if (buyHead == 0) {... */
          pop
        tag_152:
            /* "contracts/queue/LinkedListMapping.sol":4651:4655  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":4644:4655  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":4183:4662  function buyListAddTail(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":11911:12311  function sellListCreateObject(... */
        tag_126:
            /* "contracts/queue/LinkedListMapping.sol":12062:12069  uint256 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12081:12094  uint256 newId */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":12097:12111  sellistCounter */
          sload(0x02)
            /* "contracts/queue/LinkedListMapping.sol":12081:12111  uint256 newId = sellistCounter */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":12121:12135  sellistCounter */
          0x02
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12121:12137  sellistCounter++ */
          dup2
          sload
          dup1
          swap3
          swap2
          swap1
          0x01
          add
          swap2
          swap1
          pop
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":12147:12171  OrderStruct memory order */
          tag_157
          tag_64
          jump	// in
        tag_157:
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          dup1
            /* "contracts/queue/LinkedListMapping.sol":12198:12204  sender */
          dup9
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          0xffffffffffffffffffffffffffffffffffffffff
          and
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":12206:12211  price */
          dup8
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":12213:12219  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":12221:12229  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":12231:12236  newId */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":12238:12239  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          0x20
          add
            /* "contracts/queue/LinkedListMapping.sol":12241:12242  0 */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
          dup2
          mstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":12147:12243  OrderStruct memory order =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":12274:12279  order */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":12253:12261  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":12253:12271  sellList[order.id] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12262:12267  order */
          dup4
            /* "contracts/queue/LinkedListMapping.sol":12262:12270  order.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":12253:12271  sellList[order.id] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":12253:12279  sellList[order.id] = order */
          0x00
          dup3
          add
          mload
          dup2
          0x00
          add
          exp(0x0100, 0x00)
          dup2
          sload
          dup2
          0xffffffffffffffffffffffffffffffffffffffff
          mul
          not
          and
          swap1
          dup4
          0xffffffffffffffffffffffffffffffffffffffff
          and
          mul
          or
          swap1
          sstore
          pop
          0x20
          dup3
          add
          mload
          dup2
          0x01
          add
          sstore
          0x40
          dup3
          add
          mload
          dup2
          0x02
          add
          sstore
          0x60
          dup3
          add
          mload
          dup2
          0x03
          add
          sstore
          0x80
          dup3
          add
          mload
          dup2
          0x04
          add
          sstore
          0xa0
          dup3
          add
          mload
          dup2
          0x05
          add
          sstore
          0xc0
          dup3
          add
          mload
          dup2
          0x06
          add
          sstore
          swap1
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":12296:12301  order */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":12296:12304  order.id */
          0x80
          add
          mload
            /* "contracts/queue/LinkedListMapping.sol":12289:12304  return order.id */
          swap3
          pop
          pop
          pop
            /* "contracts/queue/LinkedListMapping.sol":11911:12311  function sellListCreateObject(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":12317:12523  function sellListLink(uint256 prevId, uint256 nextId)... */
        tag_128:
            /* "contracts/queue/LinkedListMapping.sol":12405:12409  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12449:12455  nextId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":12425:12433  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":12425:12441  sellList[prevId] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12434:12440  prevId */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":12425:12441  sellList[prevId] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":12425:12446  sellList[prevId].next */
          0x05
          add
            /* "contracts/queue/LinkedListMapping.sol":12425:12455  sellList[prevId].next = nextId */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":12489:12495  prevId */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":12465:12473  sellList */
          0x06
            /* "contracts/queue/LinkedListMapping.sol":12465:12481  sellList[nextId] */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":12474:12480  nextId */
          dup5
            /* "contracts/queue/LinkedListMapping.sol":12465:12481  sellList[nextId] */
          dup2
          mstore
          0x20
          add
          swap1
          dup2
          mstore
          0x20
          add
          0x00
          keccak256
            /* "contracts/queue/LinkedListMapping.sol":12465:12486  sellList[nextId].prev */
          0x06
          add
            /* "contracts/queue/LinkedListMapping.sol":12465:12495  sellList[nextId].prev = prevId */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":12512:12516  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":12505:12516  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":12317:12523  function sellListLink(uint256 prevId, uint256 nextId)... */
          swap3
          swap2
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":11793:11905  function sellListSetHead(uint256 id) internal returns (bool) {... */
        tag_130:
            /* "contracts/queue/LinkedListMapping.sol":11848:11852  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":11875:11877  id */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":11864:11872  sellHead */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":11864:11877  sellHead = id */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":11894:11898  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":11887:11898  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":11793:11905  function sellListSetHead(uint256 id) internal returns (bool) {... */
          swap2
          swap1
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":11257:11369  function sellListSetTail(uint256 id) internal returns (bool) {... */
        tag_133:
            /* "contracts/queue/LinkedListMapping.sol":11312:11316  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":11339:11341  id */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":11328:11336  sellTail */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":11328:11341  sellTail = id */
          dup2
          swap1
          sstore
          pop
            /* "contracts/queue/LinkedListMapping.sol":11358:11362  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":11351:11362  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":11257:11369  function sellListSetTail(uint256 id) internal returns (bool) {... */
          swap2
          swap1
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":10765:11251  function sellListAddTail(... */
        tag_137:
            /* "contracts/queue/LinkedListMapping.sol":10911:10915  bool */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":10943:10944  0 */
          dup1
            /* "contracts/queue/LinkedListMapping.sol":10931:10939  sellHead */
          sload(0x00)
            /* "contracts/queue/LinkedListMapping.sol":10931:10944  sellHead == 0 */
          eq
            /* "contracts/queue/LinkedListMapping.sol":10927:11223  if (sellHead == 0) {... */
          iszero
          tag_162
          jumpi
            /* "contracts/queue/LinkedListMapping.sol":10960:11008  sellListAddHead(sender, price, volume, auxprice) */
          tag_163
            /* "contracts/queue/LinkedListMapping.sol":10976:10982  sender */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":10984:10989  price */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":10991:10997  volume */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":10999:11007  auxprice */
          dup6
            /* "contracts/queue/LinkedListMapping.sol":10960:10975  sellListAddHead */
          tag_97
            /* "contracts/queue/LinkedListMapping.sol":10960:11008  sellListAddHead(sender, price, volume, auxprice) */
          jump	// in
        tag_163:
          pop
            /* "contracts/queue/LinkedListMapping.sol":10927:11223  if (sellHead == 0) {... */
          jump(tag_164)
        tag_162:
            /* "contracts/queue/LinkedListMapping.sol":11039:11055  uint256 ordertId */
          0x00
            /* "contracts/queue/LinkedListMapping.sol":11074:11127  sellListCreateObject(sender, price, volume, auxprice) */
          tag_165
            /* "contracts/queue/LinkedListMapping.sol":11095:11101  sender */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11103:11108  price */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11110:11116  volume */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11118:11126  auxprice */
          dup7
            /* "contracts/queue/LinkedListMapping.sol":11074:11094  sellListCreateObject */
          tag_126
            /* "contracts/queue/LinkedListMapping.sol":11074:11127  sellListCreateObject(sender, price, volume, auxprice) */
          jump	// in
        tag_165:
            /* "contracts/queue/LinkedListMapping.sol":11039:11127  uint256 ordertId =... */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":11141:11173  sellListLink(sellTail, ordertId) */
          tag_166
            /* "contracts/queue/LinkedListMapping.sol":11154:11162  sellTail */
          sload(0x01)
            /* "contracts/queue/LinkedListMapping.sol":11164:11172  ordertId */
          dup3
            /* "contracts/queue/LinkedListMapping.sol":11141:11153  sellListLink */
          tag_128
            /* "contracts/queue/LinkedListMapping.sol":11141:11173  sellListLink(sellTail, ordertId) */
          jump	// in
        tag_166:
          pop
            /* "contracts/queue/LinkedListMapping.sol":11187:11212  sellListSetTail(ordertId) */
          tag_167
            /* "contracts/queue/LinkedListMapping.sol":11203:11211  ordertId */
          dup2
            /* "contracts/queue/LinkedListMapping.sol":11187:11202  sellListSetTail */
          tag_133
            /* "contracts/queue/LinkedListMapping.sol":11187:11212  sellListSetTail(ordertId) */
          jump	// in
        tag_167:
          pop
            /* "contracts/queue/LinkedListMapping.sol":10927:11223  if (sellHead == 0) {... */
          pop
        tag_164:
            /* "contracts/queue/LinkedListMapping.sol":11240:11244  true */
          0x01
            /* "contracts/queue/LinkedListMapping.sol":11233:11244  return true */
          swap1
          pop
            /* "contracts/queue/LinkedListMapping.sol":10765:11251  function sellListAddTail(... */
          swap5
          swap4
          pop
          pop
          pop
          pop
          jump	// out
            /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
        tag_64:
          mload(0x40)
          dup1
          0xe0
          add
          0x40
          mstore
          dup1
          and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)
          dup2
          mstore
          0x20
          add
          0x00
          dup2
          mstore
          0x20
          add
          0x00
          dup2
          mstore
          0x20
          add
          0x00
          dup2
          mstore
          0x20
          add
          0x00
          dup2
          mstore
          0x20
          add
          0x00
          dup2
          mstore
          0x20
          add
          0x00
          dup2
          mstore
          pop
          swap1
          jump	// out

        auxdata: 0xa265627a7a723158202ca0ed3f4b3b4261daf9b332cd25681466e23cf570969357a8d90ea0b34bb4e464736f6c63430005110032
    }
}
