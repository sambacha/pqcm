    /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
  mstore(0x40, 0x80)
    /* "contracts/queue/LinkedListMapping.sol":195:365  constructor() public {... */
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x00
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "contracts/queue/LinkedListMapping.sol":195:365  constructor() public {... */
  pop
    /* "contracts/queue/LinkedListMapping.sol":237:238  0 */
  0x00
    /* "contracts/queue/LinkedListMapping.sol":226:234  sellHead */
  dup1
    /* "contracts/queue/LinkedListMapping.sol":226:238  sellHead = 0 */
  dup2
  swap1
  sstore
  pop
    /* "contracts/queue/LinkedListMapping.sol":259:260  0 */
  0x00
    /* "contracts/queue/LinkedListMapping.sol":248:256  sellTail */
  0x01
    /* "contracts/queue/LinkedListMapping.sol":248:260  sellTail = 0 */
  dup2
  swap1
  sstore
  pop
    /* "contracts/queue/LinkedListMapping.sol":287:288  1 */
  0x01
    /* "contracts/queue/LinkedListMapping.sol":270:284  sellistCounter */
  0x02
    /* "contracts/queue/LinkedListMapping.sol":270:288  sellistCounter = 1 */
  dup2
  swap1
  sstore
  pop
    /* "contracts/queue/LinkedListMapping.sol":308:309  0 */
  0x00
    /* "contracts/queue/LinkedListMapping.sol":298:305  buyHead */
  0x03
    /* "contracts/queue/LinkedListMapping.sol":298:309  buyHead = 0 */
  dup2
  swap1
  sstore
  pop
    /* "contracts/queue/LinkedListMapping.sol":329:330  0 */
  0x00
    /* "contracts/queue/LinkedListMapping.sol":319:326  buyTail */
  0x04
    /* "contracts/queue/LinkedListMapping.sol":319:330  buyTail = 0 */
  dup2
  swap1
  sstore
  pop
    /* "contracts/queue/LinkedListMapping.sol":357:358  1 */
  0x01
    /* "contracts/queue/LinkedListMapping.sol":340:354  buyListCounter */
  0x05
    /* "contracts/queue/LinkedListMapping.sol":340:358  buyListCounter = 1 */
  dup2
  swap1
  sstore
  pop
    /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x00
  codecopy
  0x00
  return
stop

sub_0: assembly {
        /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
      mstore(0x40, 0x80)
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_1
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_1:
        /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
      pop
      jumpi(tag_2, lt(calldatasize, 0x04))
      shr(0xe0, calldataload(0x00))
      dup1
      0x91447d32
      gt
      tag_20
      jumpi
      dup1
      0xa78b7907
      gt
      tag_21
      jumpi
      dup1
      0xa78b7907
      eq
      tag_15
      jumpi
      dup1
      0xa7da8ee8
      eq
      tag_16
      jumpi
      dup1
      0xbae0ca97
      eq
      tag_17
      jumpi
      dup1
      0xbfa1eb98
      eq
      tag_18
      jumpi
      dup1
      0xcc0ba670
      eq
      tag_19
      jumpi
      jump(tag_2)
    tag_21:
      dup1
      0x91447d32
      eq
      tag_11
      jumpi
      dup1
      0x9484d404
      eq
      tag_12
      jumpi
      dup1
      0x9ecf86c8
      eq
      tag_13
      jumpi
      dup1
      0xa390283f
      eq
      tag_14
      jumpi
      jump(tag_2)
    tag_20:
      dup1
      0x502f8609
      gt
      tag_22
      jumpi
      dup1
      0x502f8609
      eq
      tag_7
      jumpi
      dup1
      0x63ddcc02
      eq
      tag_8
      jumpi
      dup1
      0x69abe5ac
      eq
      tag_9
      jumpi
      dup1
      0x8a07bb65
      eq
      tag_10
      jumpi
      jump(tag_2)
    tag_22:
      dup1
      0x08f93112
      eq
      tag_3
      jumpi
      dup1
      0x1b44d8d0
      eq
      tag_4
      jumpi
      dup1
      0x211b0d3c
      eq
      tag_5
      jumpi
      dup1
      0x403e9974
      eq
      tag_6
      jumpi
    tag_2:
      0x00
      dup1
      revert
        /* "contracts/queue/LinkedListMapping.sol":1645:1667  uint256 public buyTail */
    tag_3:
      tag_23
      tag_24
      jump	// in
    tag_23:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":6235:7504  function buyListMaxDelete()... */
    tag_4:
      tag_25
      tag_26
      jump	// in
    tag_25:
      mload(0x40)
      dup1
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap4
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":8167:8335  function buyListisEmpty() external view returns (bool) {... */
    tag_5:
      tag_27
      tag_28
      jump	// in
    tag_27:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1523:1546  uint256 public sellHead */
    tag_6:
      tag_29
      tag_30
      jump	// in
    tag_29:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
    tag_7:
      tag_31
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:16   */
      0x80
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:17   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_32
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_32:
        /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_33
      jump	// in
    tag_31:
      stop
        /* "contracts/queue/LinkedListMapping.sol":14711:14807  function deletePQ(address payable callmarket) external {... */
    tag_8:
      tag_34
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_35
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_35:
        /* "contracts/queue/LinkedListMapping.sol":14711:14807  function deletePQ(address payable callmarket) external {... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_36
      jump	// in
    tag_34:
      stop
        /* "contracts/queue/LinkedListMapping.sol":1581:1610  uint256 public sellistCounter */
    tag_9:
      tag_37
      tag_38
      jump	// in
    tag_37:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":13948:14343  function sellListMax()... */
    tag_10:
      tag_39
      tag_40
      jump	// in
    tag_39:
      mload(0x40)
      dup1
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap4
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":12696:13825  function sellListMaxDelete()... */
    tag_11:
      tag_41
      tag_42
      jump	// in
    tag_41:
      mload(0x40)
      dup1
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap4
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":7708:8093  function buyListMax()... */
    tag_12:
      tag_43
      tag_44
      jump	// in
    tag_43:
      mload(0x40)
      dup1
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap4
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1762:1808  mapping(uint256 => OrderStruct) public buyList */
    tag_13:
      tag_45
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_46
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_46:
        /* "contracts/queue/LinkedListMapping.sol":1762:1808  mapping(uint256 => OrderStruct) public buyList */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_47
      jump	// in
    tag_45:
      mload(0x40)
      dup1
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup8
      dup2
      mstore
      0x20
      add
      dup7
      dup2
      mstore
      0x20
      add
      dup6
      dup2
      mstore
      0x20
      add
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap8
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1673:1702  uint256 public buyListCounter */
    tag_14:
      tag_48
      tag_49
      jump	// in
    tag_48:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
    tag_15:
      tag_50
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:16   */
      0x80
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:17   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_51
      jumpi
        /* "--CODEGEN--":30:31   */
      0x00
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_51:
        /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_52
      jump	// in
    tag_50:
      stop
        /* "contracts/queue/LinkedListMapping.sol":1709:1756  mapping(uint256 => OrderStruct) public sellList */
    tag_16:
      tag_53
      0x04
      dup1
      calldatasize
      sub
        /* "--CODEGEN--":13:15   */
      0x20
        /* "--CODEGEN--":8:11   */
      dup2
        /* "--CODEGEN--":5:16   */
      lt
        /* "--CODEGEN--":2:4   */
      iszero
      tag_54
      jumpi
        /* "--CODEGEN--":29:30   */
      0x00
        /* "--CODEGEN--":26:27   */
      dup1
        /* "--CODEGEN--":19:31   */
      revert
        /* "--CODEGEN--":2:4   */
    tag_54:
        /* "contracts/queue/LinkedListMapping.sol":1709:1756  mapping(uint256 => OrderStruct) public sellList */
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      tag_55
      jump	// in
    tag_53:
      mload(0x40)
      dup1
      dup9
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      dup8
      dup2
      mstore
      0x20
      add
      dup7
      dup2
      mstore
      0x20
      add
      dup6
      dup2
      mstore
      0x20
      add
      dup5
      dup2
      mstore
      0x20
      add
      dup4
      dup2
      mstore
      0x20
      add
      dup3
      dup2
      mstore
      0x20
      add
      swap8
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1617:1639  uint256 public buyHead */
    tag_17:
      tag_56
      tag_57
      jump	// in
    tag_56:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1552:1575  uint256 public sellTail */
    tag_18:
      tag_58
      tag_59
      jump	// in
    tag_58:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":14418:14588  function sellListisEmpty() external view returns (bool) {... */
    tag_19:
      tag_60
      tag_61
      jump	// in
    tag_60:
      mload(0x40)
      dup1
      dup3
      iszero
      iszero
      iszero
      iszero
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
        /* "contracts/queue/LinkedListMapping.sol":1645:1667  uint256 public buyTail */
    tag_24:
      sload(0x04)
      dup2
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":6235:7504  function buyListMaxDelete()... */
    tag_26:
        /* "contracts/queue/LinkedListMapping.sol":6310:6317  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6331:6338  address */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":6352:6359  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6384:6415  OrderStruct memory removeObject */
      tag_63
      tag_64
      jump	// in
    tag_63:
        /* "contracts/queue/LinkedListMapping.sol":6418:6425  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":6418:6434  buyList[buyHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6426:6433  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":6418:6434  buyList[buyHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":6384:6434  OrderStruct memory removeObject = buyList[buyHead] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":6444:6458  uint256 _price */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6461:6473  removeObject */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":6461:6479  removeObject.Price */
      0x20
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":6444:6479  uint256 _price = removeObject.Price */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":6489:6504  address _sender */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6507:6519  removeObject */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":6507:6526  removeObject.Sender */
      0x00
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":6489:6526  address _sender = removeObject.Sender */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":6536:6551  uint256 _volume */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6554:6566  removeObject */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":6554:6573  removeObject.Volume */
      0x40
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":6536:6573  uint256 _volume = removeObject.Volume */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":6599:6606  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":6588:6595  buyTail */
      sload(0x04)
        /* "contracts/queue/LinkedListMapping.sol":6588:6606  buyTail == buyHead */
      eq
        /* "contracts/queue/LinkedListMapping.sol":6584:6776  if (buyTail == buyHead) {... */
      iszero
      tag_65
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":6632:6633  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6622:6629  buyHead */
      0x03
        /* "contracts/queue/LinkedListMapping.sol":6622:6633  buyHead = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":6657:6658  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6647:6654  buyTail */
      0x04
        /* "contracts/queue/LinkedListMapping.sol":6647:6658  buyTail = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":6584:6776  if (buyTail == buyHead) {... */
      jump(tag_66)
    tag_65:
        /* "contracts/queue/LinkedListMapping.sol":6699:6711  removeObject */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":6699:6716  removeObject.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":6689:6696  buyHead */
      0x03
        /* "contracts/queue/LinkedListMapping.sol":6689:6716  buyHead = removeObject.next */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":6764:6765  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6730:6737  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":6730:6756  buyList[removeObject.next] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6738:6750  removeObject */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":6738:6755  removeObject.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":6730:6756  buyList[removeObject.next] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":6730:6761  buyList[removeObject.next].prev */
      0x06
      add
        /* "contracts/queue/LinkedListMapping.sol":6730:6765  buyList[removeObject.next].prev = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":6584:6776  if (buyTail == buyHead) {... */
    tag_66:
        /* "contracts/queue/LinkedListMapping.sol":6793:6800  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":6793:6817  buyList[removeObject.id] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6801:6813  removeObject */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":6801:6816  removeObject.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":6793:6817  buyList[removeObject.id] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6786:6817  delete buyList[removeObject.id] */
      dup1
      dup3
      add
      exp(0x0100, 0x00)
      dup2
      sload
      swap1
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      sstore
      0x01
      dup3
      add
      0x00
      swap1
      sstore
      0x02
      dup3
      add
      0x00
      swap1
      sstore
      0x03
      dup3
      add
      0x00
      swap1
      sstore
      0x04
      dup3
      add
      0x00
      swap1
      sstore
      0x05
      dup3
      add
      0x00
      swap1
      sstore
      0x06
      dup3
      add
      0x00
      swap1
      sstore
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":6835:6841  _price */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":6843:6850  _sender */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":6852:6859  _volume */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":6827:6860  return (_price, _sender, _volume) */
      swap7
      pop
      swap7
      pop
      swap7
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":6235:7504  function buyListMaxDelete()... */
      swap1
      swap2
      swap3
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":8167:8335  function buyListisEmpty() external view returns (bool) {... */
    tag_28:
        /* "contracts/queue/LinkedListMapping.sol":8216:8220  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8247:8248  0 */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":8236:8243  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":8236:8248  buyHead == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":8232:8329  if (buyHead == 0) {... */
      iszero
      tag_68
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":8271:8275  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":8264:8275  return true */
      swap1
      pop
      jump(tag_67)
        /* "contracts/queue/LinkedListMapping.sol":8232:8329  if (buyHead == 0) {... */
    tag_68:
        /* "contracts/queue/LinkedListMapping.sol":8313:8318  false */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8306:8318  return false */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":8167:8335  function buyListisEmpty() external view returns (bool) {... */
    tag_67:
      swap1
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1523:1546  uint256 public sellHead */
    tag_30:
      sload(0x00)
      dup2
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
    tag_33:
        /* "contracts/queue/LinkedListMapping.sol":2076:2102  OrderStruct memory current */
      tag_71
      tag_64
      jump	// in
    tag_71:
        /* "contracts/queue/LinkedListMapping.sol":2105:2112  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":2105:2121  buyList[buyHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":2113:2120  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":2105:2121  buyList[buyHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":2076:2121  OrderStruct memory current = buyList[buyHead] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":2131:2414  while (... */
    tag_72:
        /* "contracts/queue/LinkedListMapping.sol":2165:2166  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":2151:2158  current */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":2151:2161  current.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":2151:2166  current.id != 0 */
      eq
      iszero
        /* "contracts/queue/LinkedListMapping.sol":2151:2198  current.id != 0 && auxprice <= current.AuxPrice */
      dup1
      iszero
      tag_74
      jumpi
      pop
        /* "contracts/queue/LinkedListMapping.sol":2182:2189  current */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":2182:2198  current.AuxPrice */
      0x60
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":2170:2178  auxprice */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":2170:2198  auxprice <= current.AuxPrice */
      gt
      iszero
        /* "contracts/queue/LinkedListMapping.sol":2151:2198  current.id != 0 && auxprice <= current.AuxPrice */
    tag_74:
        /* "contracts/queue/LinkedListMapping.sol":2131:2414  while (... */
      iszero
      tag_73
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":2295:2302  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":2295:2316  buyList[current.next] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":2303:2310  current */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":2303:2315  current.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":2295:2316  buyList[current.next] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":2285:2316  current = buyList[current.next] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":2131:2414  while (... */
      jump(tag_72)
    tag_73:
        /* "contracts/queue/LinkedListMapping.sol":2456:2457  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":2440:2447  current */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":2440:2452  current.prev */
      0xc0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":2440:2457  current.prev == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":2423:2843  if (... */
      iszero
      tag_75
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":2594:2641  buyListAddHead(sender, price, volume, auxprice) */
      tag_76
        /* "contracts/queue/LinkedListMapping.sol":2609:2615  sender */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":2617:2622  price */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":2624:2630  volume */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":2632:2640  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":2594:2608  buyListAddHead */
      tag_77
        /* "contracts/queue/LinkedListMapping.sol":2594:2641  buyListAddHead(sender, price, volume, auxprice) */
      jump	// in
    tag_76:
      pop
        /* "contracts/queue/LinkedListMapping.sol":2423:2843  if (... */
      jump(tag_78)
    tag_75:
        /* "contracts/queue/LinkedListMapping.sol":2767:2832  buyListInsertAfter(current.prev, sender, price, volume, auxprice) */
      tag_79
        /* "contracts/queue/LinkedListMapping.sol":2786:2793  current */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":2786:2798  current.prev */
      0xc0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":2800:2806  sender */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":2808:2813  price */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":2815:2821  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":2823:2831  auxprice */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":2767:2785  buyListInsertAfter */
      tag_80
        /* "contracts/queue/LinkedListMapping.sol":2767:2832  buyListInsertAfter(current.prev, sender, price, volume, auxprice) */
      jump	// in
    tag_79:
      pop
        /* "contracts/queue/LinkedListMapping.sol":2423:2843  if (... */
    tag_78:
        /* "contracts/queue/LinkedListMapping.sol":1935:2849  function insertBid(... */
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":14711:14807  function deletePQ(address payable callmarket) external {... */
    tag_36:
        /* "contracts/queue/LinkedListMapping.sol":14789:14799  callmarket */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":14776:14800  selfdestruct(callmarket) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      selfdestruct
        /* "contracts/queue/LinkedListMapping.sol":1581:1610  uint256 public sellistCounter */
    tag_38:
      sload(0x02)
      dup2
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":13948:14343  function sellListMax()... */
    tag_40:
        /* "contracts/queue/LinkedListMapping.sol":14031:14038  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14052:14059  address */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":14073:14080  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14125:14126  0 */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":14113:14121  sellHead */
      sload(0x00)
        /* "contracts/queue/LinkedListMapping.sol":14113:14126  sellHead != 0 */
      eq
      iszero
        /* "contracts/queue/LinkedListMapping.sol":14105:14149  require(sellHead != 0, "sellList is empty!") */
      tag_83
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x12
      dup2
      mstore
      0x20
      add
      dup1
      0x73656c6c4c69737420697320656d707479210000000000000000000000000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_83:
        /* "contracts/queue/LinkedListMapping.sol":14224:14232  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":14224:14242  sellList[sellHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14233:14241  sellHead */
      dup1
      sload
        /* "contracts/queue/LinkedListMapping.sol":14224:14242  sellList[sellHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":14224:14248  sellList[sellHead].Price */
      0x01
      add
      sload
        /* "contracts/queue/LinkedListMapping.sol":14262:14270  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":14262:14280  sellList[sellHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14271:14279  sellHead */
      dup1
      sload
        /* "contracts/queue/LinkedListMapping.sol":14262:14280  sellList[sellHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":14262:14287  sellList[sellHead].Sender */
      0x00
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/LinkedListMapping.sol":14301:14309  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":14301:14319  sellList[sellHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14310:14318  sellHead */
      dup1
      sload
        /* "contracts/queue/LinkedListMapping.sol":14301:14319  sellList[sellHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":14301:14326  sellList[sellHead].Volume */
      0x02
      add
      sload
        /* "contracts/queue/LinkedListMapping.sol":14203:14336  return (... */
      swap3
      pop
      swap3
      pop
      swap3
      pop
        /* "contracts/queue/LinkedListMapping.sol":13948:14343  function sellListMax()... */
      swap1
      swap2
      swap3
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":12696:13825  function sellListMaxDelete()... */
    tag_42:
        /* "contracts/queue/LinkedListMapping.sol":12772:12779  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12793:12800  address */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":12814:12821  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12846:12877  OrderStruct memory removeObject */
      tag_85
      tag_64
      jump	// in
    tag_85:
        /* "contracts/queue/LinkedListMapping.sol":12880:12888  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":12880:12898  sellList[sellHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12889:12897  sellHead */
      dup1
      sload
        /* "contracts/queue/LinkedListMapping.sol":12880:12898  sellList[sellHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":12846:12898  OrderStruct memory removeObject = sellList[sellHead] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":12908:12922  uint256 _price */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12925:12937  removeObject */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":12925:12943  removeObject.Price */
      0x20
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":12908:12943  uint256 _price = removeObject.Price */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":12953:12968  address _sender */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12971:12983  removeObject */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":12971:12990  removeObject.Sender */
      0x00
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":12953:12990  address _sender = removeObject.Sender */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":13000:13015  uint256 _volume */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13018:13030  removeObject */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":13018:13037  removeObject.Volume */
      0x40
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":13000:13037  uint256 _volume = removeObject.Volume */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":13064:13072  sellHead */
      sload(0x00)
        /* "contracts/queue/LinkedListMapping.sol":13052:13060  sellTail */
      sload(0x01)
        /* "contracts/queue/LinkedListMapping.sol":13052:13072  sellTail == sellHead */
      eq
        /* "contracts/queue/LinkedListMapping.sol":13048:13246  if (sellTail == sellHead) {... */
      iszero
      tag_86
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":13099:13100  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13088:13096  sellHead */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":13088:13100  sellHead = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":13125:13126  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13114:13122  sellTail */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":13114:13126  sellTail = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":13048:13246  if (sellTail == sellHead) {... */
      jump(tag_87)
    tag_86:
        /* "contracts/queue/LinkedListMapping.sol":13168:13180  removeObject */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":13168:13185  removeObject.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":13157:13165  sellHead */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13157:13185  sellHead = removeObject.next */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":13234:13235  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13199:13207  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":13199:13226  sellList[removeObject.next] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13208:13220  removeObject */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":13208:13225  removeObject.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":13199:13226  sellList[removeObject.next] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":13199:13231  sellList[removeObject.next].prev */
      0x06
      add
        /* "contracts/queue/LinkedListMapping.sol":13199:13235  sellList[removeObject.next].prev = 0 */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":13048:13246  if (sellTail == sellHead) {... */
    tag_87:
        /* "contracts/queue/LinkedListMapping.sol":13263:13271  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":13263:13288  sellList[removeObject.id] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13272:13284  removeObject */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":13272:13287  removeObject.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":13263:13288  sellList[removeObject.id] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
      0x00
        /* "contracts/queue/LinkedListMapping.sol":13256:13288  delete sellList[removeObject.id] */
      dup1
      dup3
      add
      exp(0x0100, 0x00)
      dup2
      sload
      swap1
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      sstore
      0x01
      dup3
      add
      0x00
      swap1
      sstore
      0x02
      dup3
      add
      0x00
      swap1
      sstore
      0x03
      dup3
      add
      0x00
      swap1
      sstore
      0x04
      dup3
      add
      0x00
      swap1
      sstore
      0x05
      dup3
      add
      0x00
      swap1
      sstore
      0x06
      dup3
      add
      0x00
      swap1
      sstore
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":13306:13312  _price */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":13314:13321  _sender */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":13323:13330  _volume */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":13298:13331  return (_price, _sender, _volume) */
      swap7
      pop
      swap7
      pop
      swap7
      pop
      pop
      pop
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":12696:13825  function sellListMaxDelete()... */
      swap1
      swap2
      swap3
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":7708:8093  function buyListMax()... */
    tag_44:
        /* "contracts/queue/LinkedListMapping.sol":7790:7797  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":7811:7818  address */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":7832:7839  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":7883:7884  0 */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":7872:7879  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":7872:7884  buyHead != 0 */
      eq
      iszero
        /* "contracts/queue/LinkedListMapping.sol":7864:7906  require(buyHead != 0, "buyList is empty!") */
      tag_89
      jumpi
      mload(0x40)
      0x08c379a000000000000000000000000000000000000000000000000000000000
      dup2
      mstore
      0x04
      add
      dup1
      dup1
      0x20
      add
      dup3
      dup2
      sub
      dup3
      mstore
      0x11
      dup2
      mstore
      0x20
      add
      dup1
      0x6275794c69737420697320656d70747921000000000000000000000000000000
      dup2
      mstore
      pop
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      revert
    tag_89:
        /* "contracts/queue/LinkedListMapping.sol":7980:7987  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":7980:7996  buyList[buyHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":7988:7995  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":7980:7996  buyList[buyHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":7980:8002  buyList[buyHead].Price */
      0x01
      add
      sload
        /* "contracts/queue/LinkedListMapping.sol":8016:8023  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":8016:8032  buyList[buyHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8024:8031  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":8016:8032  buyList[buyHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":8016:8039  buyList[buyHead].Sender */
      0x00
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
        /* "contracts/queue/LinkedListMapping.sol":8053:8060  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":8053:8069  buyList[buyHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8061:8068  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":8053:8069  buyList[buyHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":8053:8076  buyList[buyHead].Volume */
      0x02
      add
      sload
        /* "contracts/queue/LinkedListMapping.sol":7959:8086  return (... */
      swap3
      pop
      swap3
      pop
      swap3
      pop
        /* "contracts/queue/LinkedListMapping.sol":7708:8093  function buyListMax()... */
      swap1
      swap2
      swap3
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1762:1808  mapping(uint256 => OrderStruct) public buyList */
    tag_47:
      mstore(0x20, 0x07)
      dup1
      0x00
      mstore
      keccak256(0x00, 0x40)
      0x00
      swap2
      pop
      swap1
      pop
      dup1
      0x00
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      dup1
      0x01
      add
      sload
      swap1
      dup1
      0x02
      add
      sload
      swap1
      dup1
      0x03
      add
      sload
      swap1
      dup1
      0x04
      add
      sload
      swap1
      dup1
      0x05
      add
      sload
      swap1
      dup1
      0x06
      add
      sload
      swap1
      pop
      dup8
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1673:1702  uint256 public buyListCounter */
    tag_49:
      sload(0x05)
      dup2
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
    tag_52:
        /* "contracts/queue/LinkedListMapping.sol":8650:8676  OrderStruct memory current */
      tag_91
      tag_64
      jump	// in
    tag_91:
        /* "contracts/queue/LinkedListMapping.sol":8679:8687  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":8679:8697  sellList[sellHead] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8688:8696  sellHead */
      dup1
      sload
        /* "contracts/queue/LinkedListMapping.sol":8679:8697  sellList[sellHead] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":8650:8697  OrderStruct memory current = sellList[sellHead] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":8707:8986  while (... */
    tag_92:
        /* "contracts/queue/LinkedListMapping.sol":8741:8742  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8727:8734  current */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":8727:8737  current.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":8727:8742  current.id != 0 */
      eq
      iszero
        /* "contracts/queue/LinkedListMapping.sol":8727:8774  current.id != 0 && auxprice >= current.AuxPrice */
      dup1
      iszero
      tag_94
      jumpi
      pop
        /* "contracts/queue/LinkedListMapping.sol":8758:8765  current */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":8758:8774  current.AuxPrice */
      0x60
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":8746:8754  auxprice */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":8746:8774  auxprice >= current.AuxPrice */
      lt
      iszero
        /* "contracts/queue/LinkedListMapping.sol":8727:8774  current.id != 0 && auxprice >= current.AuxPrice */
    tag_94:
        /* "contracts/queue/LinkedListMapping.sol":8707:8986  while (... */
      iszero
      tag_93
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":8871:8879  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":8871:8893  sellList[current.next] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":8880:8887  current */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":8880:8892  current.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":8871:8893  sellList[current.next] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":8861:8893  current = sellList[current.next] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":8707:8986  while (... */
      jump(tag_92)
    tag_93:
        /* "contracts/queue/LinkedListMapping.sol":9028:9029  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":9012:9019  current */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":9012:9024  current.prev */
      0xc0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":9012:9029  current.prev == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":8995:9412  if (... */
      iszero
      tag_95
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":9161:9209  sellListAddHead(sender, price, volume, auxprice) */
      tag_96
        /* "contracts/queue/LinkedListMapping.sol":9177:9183  sender */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9185:9190  price */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9192:9198  volume */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9200:9208  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9161:9176  sellListAddHead */
      tag_97
        /* "contracts/queue/LinkedListMapping.sol":9161:9209  sellListAddHead(sender, price, volume, auxprice) */
      jump	// in
    tag_96:
      pop
        /* "contracts/queue/LinkedListMapping.sol":8995:9412  if (... */
      jump(tag_98)
    tag_95:
        /* "contracts/queue/LinkedListMapping.sol":9335:9401  sellListInsertAfter(current.prev, sender, price, volume, auxprice) */
      tag_99
        /* "contracts/queue/LinkedListMapping.sol":9355:9362  current */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":9355:9367  current.prev */
      0xc0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":9369:9375  sender */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":9377:9382  price */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":9384:9390  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":9392:9400  auxprice */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":9335:9354  sellListInsertAfter */
      tag_100
        /* "contracts/queue/LinkedListMapping.sol":9335:9401  sellListInsertAfter(current.prev, sender, price, volume, auxprice) */
      jump	// in
    tag_99:
      pop
        /* "contracts/queue/LinkedListMapping.sol":8995:9412  if (... */
    tag_98:
        /* "contracts/queue/LinkedListMapping.sol":8509:9418  function insertAsk(... */
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1709:1756  mapping(uint256 => OrderStruct) public sellList */
    tag_55:
      mstore(0x20, 0x06)
      dup1
      0x00
      mstore
      keccak256(0x00, 0x40)
      0x00
      swap2
      pop
      swap1
      pop
      dup1
      0x00
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      swap1
      dup1
      0x01
      add
      sload
      swap1
      dup1
      0x02
      add
      sload
      swap1
      dup1
      0x03
      add
      sload
      swap1
      dup1
      0x04
      add
      sload
      swap1
      dup1
      0x05
      add
      sload
      swap1
      dup1
      0x06
      add
      sload
      swap1
      pop
      dup8
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1617:1639  uint256 public buyHead */
    tag_57:
      sload(0x03)
      dup2
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":1552:1575  uint256 public sellTail */
    tag_59:
      sload(0x01)
      dup2
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":14418:14588  function sellListisEmpty() external view returns (bool) {... */
    tag_61:
        /* "contracts/queue/LinkedListMapping.sol":14468:14472  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14500:14501  0 */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":14488:14496  sellHead */
      sload(0x00)
        /* "contracts/queue/LinkedListMapping.sol":14488:14501  sellHead == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":14484:14582  if (sellHead == 0) {... */
      iszero
      tag_102
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":14524:14528  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":14517:14528  return true */
      swap1
      pop
      jump(tag_101)
        /* "contracts/queue/LinkedListMapping.sol":14484:14582  if (sellHead == 0) {... */
    tag_102:
        /* "contracts/queue/LinkedListMapping.sol":14566:14571  false */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":14559:14571  return false */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":14418:14588  function sellListisEmpty() external view returns (bool) {... */
    tag_101:
      swap1
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":4784:5177  function buyListAddHead(... */
    tag_77:
        /* "contracts/queue/LinkedListMapping.sol":4929:4936  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":4948:4964  uint256 ordertId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":4967:5019  buyListCreateObject(sender, price, volume, auxprice) */
      tag_105
        /* "contracts/queue/LinkedListMapping.sol":4987:4993  sender */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":4995:5000  price */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":5002:5008  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":5010:5018  auxprice */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":4967:4986  buyListCreateObject */
      tag_106
        /* "contracts/queue/LinkedListMapping.sol":4967:5019  buyListCreateObject(sender, price, volume, auxprice) */
      jump	// in
    tag_105:
        /* "contracts/queue/LinkedListMapping.sol":4948:5019  uint256 ordertId = buyListCreateObject(sender, price, volume, auxprice) */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":5029:5059  buyListLink(ordertId, buyHead) */
      tag_107
        /* "contracts/queue/LinkedListMapping.sol":5041:5049  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":5051:5058  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":5029:5040  buyListLink */
      tag_108
        /* "contracts/queue/LinkedListMapping.sol":5029:5059  buyListLink(ordertId, buyHead) */
      jump	// in
    tag_107:
        /* "contracts/queue/LinkedListMapping.sol":5069:5093  buyListSetHead(ordertId) */
      tag_109
        /* "contracts/queue/LinkedListMapping.sol":5084:5092  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":5069:5083  buyListSetHead */
      tag_110
        /* "contracts/queue/LinkedListMapping.sol":5069:5093  buyListSetHead(ordertId) */
      jump	// in
    tag_109:
      pop
        /* "contracts/queue/LinkedListMapping.sol":5118:5119  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5107:5114  buyTail */
      sload(0x04)
        /* "contracts/queue/LinkedListMapping.sol":5107:5119  buyTail == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":5103:5145  if (buyTail == 0) buyListSetTail(ordertId) */
      iszero
      tag_111
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":5121:5145  buyListSetTail(ordertId) */
      tag_112
        /* "contracts/queue/LinkedListMapping.sol":5136:5144  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":5121:5135  buyListSetTail */
      tag_113
        /* "contracts/queue/LinkedListMapping.sol":5121:5145  buyListSetTail(ordertId) */
      jump	// in
    tag_112:
      pop
        /* "contracts/queue/LinkedListMapping.sol":5103:5145  if (buyTail == 0) buyListSetTail(ordertId) */
    tag_111:
        /* "contracts/queue/LinkedListMapping.sol":5162:5170  ordertId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":5155:5170  return ordertId */
      swap2
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":4784:5177  function buyListAddHead(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":2927:3588  function buyListInsertAfter(... */
    tag_80:
        /* "contracts/queue/LinkedListMapping.sol":3100:3104  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":3130:3137  buyTail */
      sload(0x04)
        /* "contracts/queue/LinkedListMapping.sol":3120:3126  prevId */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":3120:3137  prevId == buyTail */
      eq
        /* "contracts/queue/LinkedListMapping.sol":3116:3561  if (prevId == buyTail) {... */
      iszero
      tag_115
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":3153:3200  buyListAddTail(sender, price, volume, auxprice) */
      tag_116
        /* "contracts/queue/LinkedListMapping.sol":3168:3174  sender */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":3176:3181  price */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":3183:3189  volume */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":3191:3199  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":3153:3167  buyListAddTail */
      tag_117
        /* "contracts/queue/LinkedListMapping.sol":3153:3200  buyListAddTail(sender, price, volume, auxprice) */
      jump	// in
    tag_116:
      pop
        /* "contracts/queue/LinkedListMapping.sol":3116:3561  if (prevId == buyTail) {... */
      jump(tag_118)
    tag_115:
        /* "contracts/queue/LinkedListMapping.sol":3231:3259  OrderStruct memory prevOrder */
      tag_119
      tag_64
      jump	// in
    tag_119:
        /* "contracts/queue/LinkedListMapping.sol":3262:3269  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":3262:3277  buyList[prevId] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":3270:3276  prevId */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":3262:3277  buyList[prevId] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":3231:3277  OrderStruct memory prevOrder = buyList[prevId] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":3291:3319  OrderStruct memory nextOrder */
      tag_120
      tag_64
      jump	// in
    tag_120:
        /* "contracts/queue/LinkedListMapping.sol":3322:3329  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":3322:3345  buyList[prevOrder.next] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":3330:3339  prevOrder */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":3330:3344  prevOrder.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":3322:3345  buyList[prevOrder.next] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":3291:3345  OrderStruct memory nextOrder = buyList[prevOrder.next] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":3359:3377  uint256 newOrderId */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":3396:3448  buyListCreateObject(sender, price, volume, auxprice) */
      tag_121
        /* "contracts/queue/LinkedListMapping.sol":3416:3422  sender */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":3424:3429  price */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":3431:3437  volume */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":3439:3447  auxprice */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":3396:3415  buyListCreateObject */
      tag_106
        /* "contracts/queue/LinkedListMapping.sol":3396:3448  buyListCreateObject(sender, price, volume, auxprice) */
      jump	// in
    tag_121:
        /* "contracts/queue/LinkedListMapping.sol":3359:3448  uint256 newOrderId =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":3462:3499  buyListLink(newOrderId, nextOrder.id) */
      tag_122
        /* "contracts/queue/LinkedListMapping.sol":3474:3484  newOrderId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":3486:3495  nextOrder */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":3486:3498  nextOrder.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":3462:3473  buyListLink */
      tag_108
        /* "contracts/queue/LinkedListMapping.sol":3462:3499  buyListLink(newOrderId, nextOrder.id) */
      jump	// in
    tag_122:
        /* "contracts/queue/LinkedListMapping.sol":3513:3550  buyListLink(prevOrder.id, newOrderId) */
      tag_123
        /* "contracts/queue/LinkedListMapping.sol":3525:3534  prevOrder */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":3525:3537  prevOrder.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":3539:3549  newOrderId */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":3513:3524  buyListLink */
      tag_108
        /* "contracts/queue/LinkedListMapping.sol":3513:3550  buyListLink(prevOrder.id, newOrderId) */
      jump	// in
    tag_123:
        /* "contracts/queue/LinkedListMapping.sol":3116:3561  if (prevId == buyTail) {... */
      pop
      pop
      pop
    tag_118:
        /* "contracts/queue/LinkedListMapping.sol":3577:3581  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":3570:3581  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":2927:3588  function buyListInsertAfter(... */
      swap6
      swap5
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":11375:11787  function sellListAddHead(... */
    tag_97:
        /* "contracts/queue/LinkedListMapping.sol":11521:11528  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":11540:11556  uint256 ordertId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":11571:11624  sellListCreateObject(sender, price, volume, auxprice) */
      tag_125
        /* "contracts/queue/LinkedListMapping.sol":11592:11598  sender */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11600:11605  price */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11607:11613  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11615:11623  auxprice */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11571:11591  sellListCreateObject */
      tag_126
        /* "contracts/queue/LinkedListMapping.sol":11571:11624  sellListCreateObject(sender, price, volume, auxprice) */
      jump	// in
    tag_125:
        /* "contracts/queue/LinkedListMapping.sol":11540:11624  uint256 ordertId =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":11634:11666  sellListLink(ordertId, sellHead) */
      tag_127
        /* "contracts/queue/LinkedListMapping.sol":11647:11655  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":11657:11665  sellHead */
      sload(0x00)
        /* "contracts/queue/LinkedListMapping.sol":11634:11646  sellListLink */
      tag_128
        /* "contracts/queue/LinkedListMapping.sol":11634:11666  sellListLink(ordertId, sellHead) */
      jump	// in
    tag_127:
      pop
        /* "contracts/queue/LinkedListMapping.sol":11676:11701  sellListSetHead(ordertId) */
      tag_129
        /* "contracts/queue/LinkedListMapping.sol":11692:11700  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":11676:11691  sellListSetHead */
      tag_130
        /* "contracts/queue/LinkedListMapping.sol":11676:11701  sellListSetHead(ordertId) */
      jump	// in
    tag_129:
      pop
        /* "contracts/queue/LinkedListMapping.sol":11727:11728  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":11715:11723  sellTail */
      sload(0x01)
        /* "contracts/queue/LinkedListMapping.sol":11715:11728  sellTail == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":11711:11755  if (sellTail == 0) sellListSetTail(ordertId) */
      iszero
      tag_131
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":11730:11755  sellListSetTail(ordertId) */
      tag_132
        /* "contracts/queue/LinkedListMapping.sol":11746:11754  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":11730:11745  sellListSetTail */
      tag_133
        /* "contracts/queue/LinkedListMapping.sol":11730:11755  sellListSetTail(ordertId) */
      jump	// in
    tag_132:
      pop
        /* "contracts/queue/LinkedListMapping.sol":11711:11755  if (sellTail == 0) sellListSetTail(ordertId) */
    tag_131:
        /* "contracts/queue/LinkedListMapping.sol":11772:11780  ordertId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":11765:11780  return ordertId */
      swap2
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":11375:11787  function sellListAddHead(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":9496:10165  function sellListInsertAfter(... */
    tag_100:
        /* "contracts/queue/LinkedListMapping.sol":9670:9674  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":9700:9708  sellTail */
      sload(0x01)
        /* "contracts/queue/LinkedListMapping.sol":9690:9696  prevId */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":9690:9708  prevId == sellTail */
      eq
        /* "contracts/queue/LinkedListMapping.sol":9686:10138  if (prevId == sellTail) {... */
      iszero
      tag_135
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":9724:9772  sellListAddTail(sender, price, volume, auxprice) */
      tag_136
        /* "contracts/queue/LinkedListMapping.sol":9740:9746  sender */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9748:9753  price */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9755:9761  volume */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9763:9771  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":9724:9739  sellListAddTail */
      tag_137
        /* "contracts/queue/LinkedListMapping.sol":9724:9772  sellListAddTail(sender, price, volume, auxprice) */
      jump	// in
    tag_136:
      pop
        /* "contracts/queue/LinkedListMapping.sol":9686:10138  if (prevId == sellTail) {... */
      jump(tag_138)
    tag_135:
        /* "contracts/queue/LinkedListMapping.sol":9803:9831  OrderStruct memory prevOrder */
      tag_139
      tag_64
      jump	// in
    tag_139:
        /* "contracts/queue/LinkedListMapping.sol":9834:9842  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":9834:9850  sellList[prevId] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":9843:9849  prevId */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":9834:9850  sellList[prevId] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":9803:9850  OrderStruct memory prevOrder = sellList[prevId] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":9864:9892  OrderStruct memory nextOrder */
      tag_140
      tag_64
      jump	// in
    tag_140:
        /* "contracts/queue/LinkedListMapping.sol":9895:9903  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":9895:9919  sellList[prevOrder.next] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":9904:9913  prevOrder */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":9904:9918  prevOrder.next */
      0xa0
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":9895:9919  sellList[prevOrder.next] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":9864:9919  OrderStruct memory nextOrder = sellList[prevOrder.next] */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      swap1
      dup2
      0x00
      dup3
      add
      0x00
      swap1
      sload
      swap1
      0x0100
      exp
      swap1
      div
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
      0x01
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x02
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x03
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x04
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x05
      dup3
      add
      sload
      dup2
      mstore
      0x20
      add
      0x06
      dup3
      add
      sload
      dup2
      mstore
      pop
      pop
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":9933:9951  uint256 newOrderId */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":9970:10023  sellListCreateObject(sender, price, volume, auxprice) */
      tag_141
        /* "contracts/queue/LinkedListMapping.sol":9991:9997  sender */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":9999:10004  price */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":10006:10012  volume */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":10014:10022  auxprice */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":9970:9990  sellListCreateObject */
      tag_126
        /* "contracts/queue/LinkedListMapping.sol":9970:10023  sellListCreateObject(sender, price, volume, auxprice) */
      jump	// in
    tag_141:
        /* "contracts/queue/LinkedListMapping.sol":9933:10023  uint256 newOrderId =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":10037:10075  sellListLink(newOrderId, nextOrder.id) */
      tag_142
        /* "contracts/queue/LinkedListMapping.sol":10050:10060  newOrderId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":10062:10071  nextOrder */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":10062:10074  nextOrder.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":10037:10049  sellListLink */
      tag_128
        /* "contracts/queue/LinkedListMapping.sol":10037:10075  sellListLink(newOrderId, nextOrder.id) */
      jump	// in
    tag_142:
      pop
        /* "contracts/queue/LinkedListMapping.sol":10089:10127  sellListLink(prevOrder.id, newOrderId) */
      tag_143
        /* "contracts/queue/LinkedListMapping.sol":10102:10111  prevOrder */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":10102:10114  prevOrder.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":10116:10126  newOrderId */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":10089:10101  sellListLink */
      tag_128
        /* "contracts/queue/LinkedListMapping.sol":10089:10127  sellListLink(prevOrder.id, newOrderId) */
      jump	// in
    tag_143:
      pop
        /* "contracts/queue/LinkedListMapping.sol":9686:10138  if (prevId == sellTail) {... */
      pop
      pop
      pop
    tag_138:
        /* "contracts/queue/LinkedListMapping.sol":10154:10158  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":10147:10158  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":9496:10165  function sellListInsertAfter(... */
      swap6
      swap5
      pop
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":5460:5858  function buyListCreateObject(... */
    tag_106:
        /* "contracts/queue/LinkedListMapping.sol":5610:5617  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5629:5642  uint256 newId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":5645:5659  buyListCounter */
      sload(0x05)
        /* "contracts/queue/LinkedListMapping.sol":5629:5659  uint256 newId = buyListCounter */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":5669:5683  buyListCounter */
      0x05
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5669:5685  buyListCounter++ */
      dup2
      sload
      dup1
      swap3
      swap2
      swap1
      0x01
      add
      swap2
      swap1
      pop
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":5695:5719  OrderStruct memory order */
      tag_145
      tag_64
      jump	// in
    tag_145:
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      dup1
        /* "contracts/queue/LinkedListMapping.sol":5746:5752  sender */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":5754:5759  price */
      dup8
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":5761:5767  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":5769:5777  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":5779:5784  newId */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":5786:5787  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":5789:5790  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5734:5791  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":5695:5791  OrderStruct memory order =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":5821:5826  order */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":5801:5808  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":5801:5818  buyList[order.id] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5809:5814  order */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":5809:5817  order.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":5801:5818  buyList[order.id] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":5801:5826  buyList[order.id] = order */
      0x00
      dup3
      add
      mload
      dup2
      0x00
      add
      exp(0x0100, 0x00)
      dup2
      sload
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
      0x20
      dup3
      add
      mload
      dup2
      0x01
      add
      sstore
      0x40
      dup3
      add
      mload
      dup2
      0x02
      add
      sstore
      0x60
      dup3
      add
      mload
      dup2
      0x03
      add
      sstore
      0x80
      dup3
      add
      mload
      dup2
      0x04
      add
      sstore
      0xa0
      dup3
      add
      mload
      dup2
      0x05
      add
      sstore
      0xc0
      dup3
      add
      mload
      dup2
      0x06
      add
      sstore
      swap1
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":5843:5848  order */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":5843:5851  order.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":5836:5851  return order.id */
      swap3
      pop
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":5460:5858  function buyListCreateObject(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":5945:6092  function buyListLink(uint256 prevId, uint256 nextId) internal {... */
    tag_108:
        /* "contracts/queue/LinkedListMapping.sol":6040:6046  nextId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":6017:6024  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":6017:6032  buyList[prevId] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6025:6031  prevId */
      dup5
        /* "contracts/queue/LinkedListMapping.sol":6017:6032  buyList[prevId] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":6017:6037  buyList[prevId].next */
      0x05
      add
        /* "contracts/queue/LinkedListMapping.sol":6017:6046  buyList[prevId].next = nextId */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":6079:6085  prevId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":6056:6063  buyList */
      0x07
        /* "contracts/queue/LinkedListMapping.sol":6056:6071  buyList[nextId] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":6064:6070  nextId */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":6056:6071  buyList[nextId] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":6056:6076  buyList[nextId].prev */
      0x06
      add
        /* "contracts/queue/LinkedListMapping.sol":6056:6085  buyList[nextId].prev = prevId */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":5945:6092  function buyListLink(uint256 prevId, uint256 nextId) internal {... */
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":5264:5374  function buyListSetHead(uint256 id) internal returns (bool) {... */
    tag_110:
        /* "contracts/queue/LinkedListMapping.sol":5318:5322  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":5344:5346  id */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":5334:5341  buyHead */
      0x03
        /* "contracts/queue/LinkedListMapping.sol":5334:5346  buyHead = id */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":5363:5367  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":5356:5367  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":5264:5374  function buyListSetHead(uint256 id) internal returns (bool) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":4668:4778  function buyListSetTail(uint256 id) internal returns (bool) {... */
    tag_113:
        /* "contracts/queue/LinkedListMapping.sol":4722:4726  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":4748:4750  id */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":4738:4745  buyTail */
      0x04
        /* "contracts/queue/LinkedListMapping.sol":4738:4750  buyTail = id */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":4767:4771  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":4760:4771  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":4668:4778  function buyListSetTail(uint256 id) internal returns (bool) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":4183:4662  function buyListAddTail(... */
    tag_117:
        /* "contracts/queue/LinkedListMapping.sol":4328:4332  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":4359:4360  0 */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":4348:4355  buyHead */
      sload(0x03)
        /* "contracts/queue/LinkedListMapping.sol":4348:4360  buyHead == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":4344:4634  if (buyHead == 0) {... */
      iszero
      tag_150
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":4376:4423  buyListAddHead(sender, price, volume, auxprice) */
      tag_151
        /* "contracts/queue/LinkedListMapping.sol":4391:4397  sender */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":4399:4404  price */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":4406:4412  volume */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":4414:4422  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":4376:4390  buyListAddHead */
      tag_77
        /* "contracts/queue/LinkedListMapping.sol":4376:4423  buyListAddHead(sender, price, volume, auxprice) */
      jump	// in
    tag_151:
      pop
        /* "contracts/queue/LinkedListMapping.sol":4344:4634  if (buyHead == 0) {... */
      jump(tag_152)
    tag_150:
        /* "contracts/queue/LinkedListMapping.sol":4454:4470  uint256 ordertId */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":4489:4541  buyListCreateObject(sender, price, volume, auxprice) */
      tag_153
        /* "contracts/queue/LinkedListMapping.sol":4509:4515  sender */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":4517:4522  price */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":4524:4530  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":4532:4540  auxprice */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":4489:4508  buyListCreateObject */
      tag_106
        /* "contracts/queue/LinkedListMapping.sol":4489:4541  buyListCreateObject(sender, price, volume, auxprice) */
      jump	// in
    tag_153:
        /* "contracts/queue/LinkedListMapping.sol":4454:4541  uint256 ordertId =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":4555:4585  buyListLink(buyTail, ordertId) */
      tag_154
        /* "contracts/queue/LinkedListMapping.sol":4567:4574  buyTail */
      sload(0x04)
        /* "contracts/queue/LinkedListMapping.sol":4576:4584  ordertId */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":4555:4566  buyListLink */
      tag_108
        /* "contracts/queue/LinkedListMapping.sol":4555:4585  buyListLink(buyTail, ordertId) */
      jump	// in
    tag_154:
        /* "contracts/queue/LinkedListMapping.sol":4599:4623  buyListSetTail(ordertId) */
      tag_155
        /* "contracts/queue/LinkedListMapping.sol":4614:4622  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":4599:4613  buyListSetTail */
      tag_113
        /* "contracts/queue/LinkedListMapping.sol":4599:4623  buyListSetTail(ordertId) */
      jump	// in
    tag_155:
      pop
        /* "contracts/queue/LinkedListMapping.sol":4344:4634  if (buyHead == 0) {... */
      pop
    tag_152:
        /* "contracts/queue/LinkedListMapping.sol":4651:4655  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":4644:4655  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":4183:4662  function buyListAddTail(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":11911:12311  function sellListCreateObject(... */
    tag_126:
        /* "contracts/queue/LinkedListMapping.sol":12062:12069  uint256 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12081:12094  uint256 newId */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":12097:12111  sellistCounter */
      sload(0x02)
        /* "contracts/queue/LinkedListMapping.sol":12081:12111  uint256 newId = sellistCounter */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":12121:12135  sellistCounter */
      0x02
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12121:12137  sellistCounter++ */
      dup2
      sload
      dup1
      swap3
      swap2
      swap1
      0x01
      add
      swap2
      swap1
      pop
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":12147:12171  OrderStruct memory order */
      tag_157
      tag_64
      jump	// in
    tag_157:
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      dup1
        /* "contracts/queue/LinkedListMapping.sol":12198:12204  sender */
      dup9
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      0xffffffffffffffffffffffffffffffffffffffff
      and
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":12206:12211  price */
      dup8
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":12213:12219  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":12221:12229  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":12231:12236  newId */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":12238:12239  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      0x20
      add
        /* "contracts/queue/LinkedListMapping.sol":12241:12242  0 */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12186:12243  OrderStruct(sender, price, volume, auxprice, newId, 0, 0) */
      dup2
      mstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":12147:12243  OrderStruct memory order =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":12274:12279  order */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":12253:12261  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":12253:12271  sellList[order.id] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12262:12267  order */
      dup4
        /* "contracts/queue/LinkedListMapping.sol":12262:12270  order.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":12253:12271  sellList[order.id] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":12253:12279  sellList[order.id] = order */
      0x00
      dup3
      add
      mload
      dup2
      0x00
      add
      exp(0x0100, 0x00)
      dup2
      sload
      dup2
      0xffffffffffffffffffffffffffffffffffffffff
      mul
      not
      and
      swap1
      dup4
      0xffffffffffffffffffffffffffffffffffffffff
      and
      mul
      or
      swap1
      sstore
      pop
      0x20
      dup3
      add
      mload
      dup2
      0x01
      add
      sstore
      0x40
      dup3
      add
      mload
      dup2
      0x02
      add
      sstore
      0x60
      dup3
      add
      mload
      dup2
      0x03
      add
      sstore
      0x80
      dup3
      add
      mload
      dup2
      0x04
      add
      sstore
      0xa0
      dup3
      add
      mload
      dup2
      0x05
      add
      sstore
      0xc0
      dup3
      add
      mload
      dup2
      0x06
      add
      sstore
      swap1
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":12296:12301  order */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":12296:12304  order.id */
      0x80
      add
      mload
        /* "contracts/queue/LinkedListMapping.sol":12289:12304  return order.id */
      swap3
      pop
      pop
      pop
        /* "contracts/queue/LinkedListMapping.sol":11911:12311  function sellListCreateObject(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":12317:12523  function sellListLink(uint256 prevId, uint256 nextId)... */
    tag_128:
        /* "contracts/queue/LinkedListMapping.sol":12405:12409  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12449:12455  nextId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":12425:12433  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":12425:12441  sellList[prevId] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12434:12440  prevId */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":12425:12441  sellList[prevId] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":12425:12446  sellList[prevId].next */
      0x05
      add
        /* "contracts/queue/LinkedListMapping.sol":12425:12455  sellList[prevId].next = nextId */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":12489:12495  prevId */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":12465:12473  sellList */
      0x06
        /* "contracts/queue/LinkedListMapping.sol":12465:12481  sellList[nextId] */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":12474:12480  nextId */
      dup5
        /* "contracts/queue/LinkedListMapping.sol":12465:12481  sellList[nextId] */
      dup2
      mstore
      0x20
      add
      swap1
      dup2
      mstore
      0x20
      add
      0x00
      keccak256
        /* "contracts/queue/LinkedListMapping.sol":12465:12486  sellList[nextId].prev */
      0x06
      add
        /* "contracts/queue/LinkedListMapping.sol":12465:12495  sellList[nextId].prev = prevId */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":12512:12516  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":12505:12516  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":12317:12523  function sellListLink(uint256 prevId, uint256 nextId)... */
      swap3
      swap2
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":11793:11905  function sellListSetHead(uint256 id) internal returns (bool) {... */
    tag_130:
        /* "contracts/queue/LinkedListMapping.sol":11848:11852  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":11875:11877  id */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":11864:11872  sellHead */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":11864:11877  sellHead = id */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":11894:11898  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":11887:11898  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":11793:11905  function sellListSetHead(uint256 id) internal returns (bool) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":11257:11369  function sellListSetTail(uint256 id) internal returns (bool) {... */
    tag_133:
        /* "contracts/queue/LinkedListMapping.sol":11312:11316  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":11339:11341  id */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":11328:11336  sellTail */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":11328:11341  sellTail = id */
      dup2
      swap1
      sstore
      pop
        /* "contracts/queue/LinkedListMapping.sol":11358:11362  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":11351:11362  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":11257:11369  function sellListSetTail(uint256 id) internal returns (bool) {... */
      swap2
      swap1
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":10765:11251  function sellListAddTail(... */
    tag_137:
        /* "contracts/queue/LinkedListMapping.sol":10911:10915  bool */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":10943:10944  0 */
      dup1
        /* "contracts/queue/LinkedListMapping.sol":10931:10939  sellHead */
      sload(0x00)
        /* "contracts/queue/LinkedListMapping.sol":10931:10944  sellHead == 0 */
      eq
        /* "contracts/queue/LinkedListMapping.sol":10927:11223  if (sellHead == 0) {... */
      iszero
      tag_162
      jumpi
        /* "contracts/queue/LinkedListMapping.sol":10960:11008  sellListAddHead(sender, price, volume, auxprice) */
      tag_163
        /* "contracts/queue/LinkedListMapping.sol":10976:10982  sender */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":10984:10989  price */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":10991:10997  volume */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":10999:11007  auxprice */
      dup6
        /* "contracts/queue/LinkedListMapping.sol":10960:10975  sellListAddHead */
      tag_97
        /* "contracts/queue/LinkedListMapping.sol":10960:11008  sellListAddHead(sender, price, volume, auxprice) */
      jump	// in
    tag_163:
      pop
        /* "contracts/queue/LinkedListMapping.sol":10927:11223  if (sellHead == 0) {... */
      jump(tag_164)
    tag_162:
        /* "contracts/queue/LinkedListMapping.sol":11039:11055  uint256 ordertId */
      0x00
        /* "contracts/queue/LinkedListMapping.sol":11074:11127  sellListCreateObject(sender, price, volume, auxprice) */
      tag_165
        /* "contracts/queue/LinkedListMapping.sol":11095:11101  sender */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11103:11108  price */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11110:11116  volume */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11118:11126  auxprice */
      dup7
        /* "contracts/queue/LinkedListMapping.sol":11074:11094  sellListCreateObject */
      tag_126
        /* "contracts/queue/LinkedListMapping.sol":11074:11127  sellListCreateObject(sender, price, volume, auxprice) */
      jump	// in
    tag_165:
        /* "contracts/queue/LinkedListMapping.sol":11039:11127  uint256 ordertId =... */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":11141:11173  sellListLink(sellTail, ordertId) */
      tag_166
        /* "contracts/queue/LinkedListMapping.sol":11154:11162  sellTail */
      sload(0x01)
        /* "contracts/queue/LinkedListMapping.sol":11164:11172  ordertId */
      dup3
        /* "contracts/queue/LinkedListMapping.sol":11141:11153  sellListLink */
      tag_128
        /* "contracts/queue/LinkedListMapping.sol":11141:11173  sellListLink(sellTail, ordertId) */
      jump	// in
    tag_166:
      pop
        /* "contracts/queue/LinkedListMapping.sol":11187:11212  sellListSetTail(ordertId) */
      tag_167
        /* "contracts/queue/LinkedListMapping.sol":11203:11211  ordertId */
      dup2
        /* "contracts/queue/LinkedListMapping.sol":11187:11202  sellListSetTail */
      tag_133
        /* "contracts/queue/LinkedListMapping.sol":11187:11212  sellListSetTail(ordertId) */
      jump	// in
    tag_167:
      pop
        /* "contracts/queue/LinkedListMapping.sol":10927:11223  if (sellHead == 0) {... */
      pop
    tag_164:
        /* "contracts/queue/LinkedListMapping.sol":11240:11244  true */
      0x01
        /* "contracts/queue/LinkedListMapping.sol":11233:11244  return true */
      swap1
      pop
        /* "contracts/queue/LinkedListMapping.sol":10765:11251  function sellListAddTail(... */
      swap5
      swap4
      pop
      pop
      pop
      pop
      jump	// out
        /* "contracts/queue/LinkedListMapping.sol":162:14809  contract LinkedListMapping {... */
    tag_64:
      mload(0x40)
      dup1
      0xe0
      add
      0x40
      mstore
      dup1
      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      0x20
      add
      0x00
      dup2
      mstore
      pop
      swap1
      jump	// out

    auxdata: 0xa265627a7a723158202ca0ed3f4b3b4261daf9b332cd25681466e23cf570969357a8d90ea0b34bb4e464736f6c63430005110032
}
